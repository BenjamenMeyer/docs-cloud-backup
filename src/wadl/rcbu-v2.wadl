<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE application [
    <!ENTITY % common  SYSTEM "common-v2.ent">
    %common;
    
    
]>
<application xmlns="http://wadl.dev.java.net/2009/02"
             xmlns:wadl="http://wadl.dev.java.net/2009/02"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             xmlns:db="http://docbook.org/ns/docbook"
             xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
             xmlns:xi="http://www.w3.org/2001/XInclude"
             xmlns:raxapi="http://docs.rackspace.com/volume/api/v1" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:backup2="http://docs.openstack.org/common/api/v2.0"
             xmlns:imageapi="http://docs.openstack.org/image/api/v2.0" 
             xmlns:atom="http://www.w3.org/2005/Atom"
             xmlns:csapi="http://docs.openstack.org/compute/api/v2" 
             xmlns:common="http://docs.openstack.org/common/api/v1.0"
             xmlns:rcbu="http://docs.openstack.org/database/api/v1.0">
   
<!--******************************************************************-->
<!--       All Resources                                              -->
<!--******************************************************************-->      
   <resources base="https://dfw.backup.api.rackspacecloud.com/">
      <resource id="version" path="v2.0">
         
         <resource id="project_id" path="{project_id}">
            <param name="project_id" style="template"
               type="xsd:string">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">
                  <para>The unique identifier of the project. Also referred to as the tenant ID 
                     or account ID.</para></wadl:doc>
                  </param>
                  
            <resource id="health" path="health">
               <method href="#getHealthCheck"/>              
               <resource id="dependent_system" path="{dependent_system}">
                  <param name="dependent_system" style="template" type="xsd:string"> 
                     <wadl:doc 
                        xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The unique identifier for the dependent system.</para> </wadl:doc>
                  </param>
                  <method href="#getHealthDetails"/>  
               </resource>	
            </resource> 
            
            <resource id="ping" path="ping"> 	
               <method href="#getPing"/> 
            </resource>
            
            <resource id="activities" path="activities">
               <method href="#getProjectActivities"/>
            </resource>
            
            <resource id="events" path="events">
               <method href="#postEvents"/>
               <method href="#getEvents"/>
            </resource>
            
            <resource id="restores" path="restores">
               <method href="#postRestores"/>
               <method href="#getRestores"/>
               <method href="#getRestoreDetails"/>
               <method href="#updateRestore"/>
               <method href="#getRestoreErrors"/>
               <method href="#getRestoreEvents"/>
            </resource>
            

         </resource>
      </resource>
   </resources>  
<!--******************************************************************-->
<!--       All methods                                                -->
<!--******************************************************************-->
<!--                                                                  -->
<!--******************************************************************-->
<!--       Health methods                                             -->
<!--******************************************************************-->
<!--*******************************************************-->
<!--      Get health check - ?? move to Admin WADL ??      -->
<!--*******************************************************-->
	<method name="GET" id="getHealthCheck">
		<wadl:doc xml:lang="EN" title="Perform health check"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Performs a health check for all dependent systems.</para>
			<para>This operation performs a health check for all dependent systems. </para>			
		</wadl:doc>
	   
		<request>
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples-v2/cbu-getHealthCheck_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
	   
		<response status="200" xmlns="http://wadl.dev.java.net/2009/02">
		   <doc title="OK" xml:lang="EN">The request succeeded.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
				   xml:lang="EN" title="Example 1: Perform health check: JSON response">
					<xsdxt:code 
						href="../wadl/samples-v2/cbu-getHealthCheck1_response-json-http.txt"
					/>
					<xsdxt:code
						href="../wadl/samples-v2/cbu-getHealthCheck1_response.json"
					/>
				</wadl:doc>
				   <wadl:doc xmlns="http://docbook.org/ns/docbook"
				      xml:lang="EN" title="Example 2: Perform health check: JSON response">
					<xsdxt:code 
						href="../wadl/samples-v2/cbu-getHealthCheck2_response-json-http.txt"
					/>
					<xsdxt:code
						href="../wadl/samples-v2/cbu-getHealthCheck2_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	   &commonFaults;
	   &getFaults;	   
	</method>	
<!--*******************************************************-->
<!--     Get health details   - ?? move to Admin WADL ??   -->
<!--*******************************************************-->
	<method name="GET" id="getHealthDetails">
		<wadl:doc xml:lang="EN" title="Get health details"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Gets the health details for the specified dependent system. </para>
			<para>This operation shows whether the specified dependent system is online or offline. </para>
					
		</wadl:doc>
		
	   <request>
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples-v2/cbu-getHealthDetails_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
		
	   <response status="200" xmlns="http://wadl.dev.java.net/2009/02">
	      <doc title="OK" xml:lang="EN">The request succeeded.</doc>
			<representation mediaType="application/json">
			   <wadl:doc xmlns="http://docbook.org/ns/docbook"
			      xml:lang="EN" title="Example 1: Get health details: JSON response">
					<xsdxt:code
						href="../wadl/samples-v2/cbu-getHealthDetails1_response-json-http.txt"
					/>
					<xsdxt:code
						href="../wadl/samples-v2/cbu-getHealthDetails1_response.json"
					/>
			   </wadl:doc>
			      <wadl:doc xmlns="http://docbook.org/ns/docbook"
			         xml:lang="EN" title="Example 2: Get health details: JSON response">
					<xsdxt:code
					href="../wadl/samples-v2/cbu-getHealthDetails2_response-json-http.txt"
					/>
					<xsdxt:code
						href="../wadl/samples-v2/cbu-getHealthDetails2_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	   &commonFaults;
	   &getFaults;	   
	</method> 
<!--*******************************************************-->
<!--               Get ping                                -->
<!--*******************************************************-->
   <method name="GET" id="getPing">
      <wadl:doc xml:lang="EN" title="Ping the application"
         xmlns="http://docbook.org/ns/docbook">
         <para role="shortdesc">Ping the application.</para>
         <para>This operation gives a quick indication of whether the application is running or not. It is used by a load balancer's health checker. </para>         
      </wadl:doc>
      
      <request>
         <representation mediaType="application/json" >
            <doc>
               <xsdxt:code href="../wadl/samples-v2/cbu-getPing_request-json-http.txt"/>
            </doc>
         </representation>
      </request>
      
      <response status="204" xmlns="http://wadl.dev.java.net/2009/02">
         <doc title="No Content" xml:lang="EN">The server successfully fulfilled the request. There is no additional content to send in the response body.</doc>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  href="../wadl/samples-v2/cbu-getPing_response-json-http.txt"
               />
            </wadl:doc>
         </representation>
      </response>
      &commonFaults;
      &getFaults;	 
   </method>
   
<!--******************************************************************-->
<!--       Activity method                                            -->
<!--******************************************************************--> 
<!--********************************-->
<!-- List activities for project    -->
<!--********************************-->                    
         <method name="GET" id="getProjectActivities">
            <wadl:doc title="List activities for a project">
               <para xmlns="http://docbook.org/ns/docbook" role="shortdesc">Lists the activities for the project. </para>
               <para xmlns="http://docbook.org/ns/docbook">This operation lists the activities for the project. If no activities are available, the <code>activities</code>" parameter in the response is an empty array. (TODO: Add restorable to backups to indicate which are available for restore?)</para>
            </wadl:doc>
            
            <request>
               <param name="marker" style="query" type="xsd:string"
                  required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">Specifies the <code>id</code> of the last known activity. For example: 2d26bb8d-12d0-4579-bbd0-5db7216128ef</wadl:doc>
               </param>
               <param name="limit" style="query" type="xsd:integer"
                  required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">Specifies the number of activites to list. The default
                     value is 100.
                  </wadl:doc>
               </param>
               <param name="sort_dir" style="query" type="xsd:string"
                  required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">Specifies the direction to sort the results. Valid values are <code>asc</code> and <code>desc</code>. The default value is <code>desc</code>.
                  </wadl:doc>
               </param>
               <param name="type" style="query" type="xsd:string"
                  required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">Specifies the type of activities to filter. Valid values are <code>backup</code>, <code>cleanup</code>, or <code>restore</code>.
                     </wadl:doc>
               </param>
               <param name="state" style="query" type="xsd:string"
                  required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">Specifies the state of the activities to filter. Valid values are any state defined by a backup, a cleanup, or a restore, such as <code>completed_with_errors</code>.
                  </wadl:doc>
               </param>
               <param name="agent_ids" style="query" type="xsd:string"
                  required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">Specifies a comma-separated list of agent IDs by which to filter. For example: <code>8f135b4f-7a69-4b8a-947f-5e80d772fd97</code>,<code>6d94a88d-1c17-484b-9247-b76f731f4731</code>
                  </wadl:doc>
               </param>
               <param name="configuration_ids" style="query" type="xsd:string"
                  required="false">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN">Specifies a comma-separated list of configuration IDs by which to filter. For example: <code>7c8ee069-568f-4d5a-932f-fb2af86b5fd5</code>,<code>abf89721-616e-4922-94d4-29757d6a8671</code>
                  </wadl:doc>
               </param>
               <representation mediaType="application/json" >
                  <doc>
                     <xsdxt:code href="../wadl/samples-v2/cbu-getProjectActivities_request-json-http.txt"/>
                  </doc>
               </representation>
            </request>
            
            <response status="200">                
               <doc title="OK" xml:lang="EN">The request succeeded.</doc>
               <representation mediaType="application/json">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">                                       
                  <xsdxt:code 
                     href="../wadl/samples-v2/cbu-getProjectActivities_response-json-http.txt"
                  />
                  <xsdxt:code
                     href="../wadl/samples-v2/cbu-getProjectActivities_response.json"
                  />
                  </wadl:doc>   
               </representation>               
            </response>
            &commonFaults;
            &getFaults;	 
         </method>
   
<!--******************************************************************-->
<!--        Events methods                                            -->
<!--******************************************************************--> 
<!--********************************-->
<!--       Post project events      -->
<!--********************************-->       
   <method name="POST" id="postEvents">
      <wadl:doc title="Post project events">
         <para xmlns="http://docbook.org/ns/docbook" role="shortdesc">Posts events from the API.</para>
         <para xmlns="http://docbook.org/ns/docbook">This operation results in the agent checking for events from the API periodically, based on a schedule. The operation also causes the agent to post heartbeat events periodically so clients can determine if the agent is online or offline. By setting the <code>event</code> to <code>agent_activate</code> the the request, you can then use the <code>mode</code> parameter to indicate how often the agent should post events.</para>
         <note xmlns="http://docbook.org/ns/docbook"><para>After a specified period of time, the agent falls back to a <code>mode</code> of <code>idle</code>.</para></note>
      </wadl:doc> 
      
      <request>
         <representation mediaType="application/json">
            <doc>
               <xsdxt:code href="../wadl/samples-v2/cbu-postEvents_request-json-http.txt"/>
               <xsdxt:code href="../wadl/samples-v2/cbu-postEvents_request.json"/>
            </doc> 
            <param name="event" style="plain" path="$.event" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">For <code>event</code>, use <code>agent_activate</code> to have the client specify how often the agent should perform the post of events.
               </wadl:doc>
            </param>
            <param name="mode" style="plain" path="$.name" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the type of event collection. Valid values are <code>idle</code>, <code>active</code>, and <code>real_time</code>.
               
               <code>idle</code> specifies that the agents checks for and posts events periodically, but not frequetnly. You do not have a need to communicate with the agent immediately. Note: Testing the agent's <code>online</code> or <code>offline</code> status is not safe in this <code>mode</code>.
               <code>active</code> specifies that the agent checks for and posts events frequently.
               <code>real_time</code> specifies that the agent checks for and posts events very frequently. Typically, in this <code>mode</code>, you want to perform multiple, rapid, time-sensitive tasks with the agent, such as browsing files on the host or in a previous backup.
               
               </wadl:doc>
            </param> 
         </representation>
      </request>
      
      <response status="202">                
         <doc title="Accepted" xml:lang="EN">The request has been accepted for processing, but the processing has not been completed.</doc>
         <representation mediaType="application/json">                      
         </representation>
      </response>
      &commonFaults;
   </method>
   
<!--********************************-->
<!--       Get project events      -->
<!--********************************-->       
   <method name="GET" id="getEvents">
      <wadl:doc title="Retrieve project events">
         <para xmlns="http://docbook.org/ns/docbook" role="shortdesc">Retrieves all events for the specified project.</para>
         <para xmlns="http://docbook.org/ns/docbook">This operation returns events that are similar to those returned from GET /v2/agents/{id}/events{?marker,limit,sort_dir} except that this operation returns events for all agents in the project instead of a single agent. Additional <code>agent_activate</code> events that have been sent to the entire project instead of to a single agent are also returned.</para>
         <note xmlns="http://docbook.org/ns/docbook"><para>You should consider these events as transient because they might disappear after a minute or so. Therefore, this operation is most useful for monitoring the specified project's current activity.</para></note>
      </wadl:doc>  
      
      <request>
         <representation mediaType="application/json">
            <doc>
               <xsdxt:code href="../wadl/samples-v2/cbu-getEvents_request-json-htttp.txt"/>
            </doc>
            <param name="marker" style="query" type="xsd:string"
               required="false">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the <code>id</code> of the last known activity. For example: 2d26bb8d-12d0-4579-bbd0-5db7216128ef</wadl:doc>
            </param>
            <param name="limit" style="query" type="xsd:integer"
               required="false">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the number of activities to list. The default
                  value is 100.
               </wadl:doc>
            </param>
            <param name="sort_dir" style="query" type="xsd:string"
               required="false">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the direction to sort the results. Valid values are <code>asc</code> and <code>desc</code>. The default value is <code>desc</code>.
               </wadl:doc>
            </param>
         </representation>
      </request>
      
      <response status="200">                
         <doc title="OK" xml:lang="EN">The request succeeded.</doc>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
               <xsdxt:code href="../wadl/samples-v2/cbu-getEvents_response-json-http.txt"/>
               <xsdxt:code href="../wadl/samples-v2/cbu-getEvents_response.json"/>
            </wadl:doc>            
         </representation>
      </response>
      &commonFaults;
      &getFaults;	
   </method>
   
<!--******************************************************************-->
<!--        Restore methods                                            -->
<!--******************************************************************--> 
<!--********************************-->
<!--       Start a restore          -->
<!--********************************-->       
   <method name="POST" id="postRestores">
      <wadl:doc title="Start a restore">
         <para xmlns="http://docbook.org/ns/docbook" role="shortdesc">Start a restore.</para>
         <para xmlns="http://docbook.org/ns/docbook">This operation starts are restore.</para>
      </wadl:doc> 
      
      <request>
         <representation mediaType="application/json">
            <doc>
               <xsdxt:code href="../wadl/samples-v2/cbu-postRestore_request-json-http.txt"/>
               <xsdxt:code href="../wadl/samples-v2/cbu-postRestore_request.json"/>
            </doc> 
            <param name="backup_id" style="plain" path="$.backup_id" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the ID for the backup to be used for the restore.
               </wadl:doc>
            </param>
            <param name="destination_agent_ID" style="plain" path="$.destination_agent_ID" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the ID for the destination agent.                  
               </wadl:doc>
            </param>
            <param name="destination_path" style="plain" path="$.destination_path" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the path for the destination.                  
               </wadl:doc>
            </param>
            <param name="overwrite_files" style="plain" path="$.overwrite_files" required="false">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies if any existing files are to be overwritten. The default is <code>false</code>.                  
               </wadl:doc>
            </param>
            <param name="encrypted_password_hex" style="plain" path="$.encrypted_password_hex" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the encrypted password in hex.                  
               </wadl:doc>
            </param>
            <param name="inclusions" style="plain" path="$.inclusions" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the resources to include in the restore.                  
               </wadl:doc>
            </param>
            <param name="type" style="plain" path="$.inclusions.type" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the type of resources to include in the restore.                 
               </wadl:doc>
            </param>
            <param name="path" style="plain" path="$.inclusions.path" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the path to the resources to include in the restore.                  
               </wadl:doc>
            </param>
            <param name="exclusions" style="plain" path="$.exclusions" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the resources to exclude from the restore.                 
               </wadl:doc>
            </param>
            <param name="type" style="plain" path="$.exclusions.type" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the type of resources to exclude from the restore.                  
               </wadl:doc>
            </param>
            <param name="path" style="plain" path="$.exclusions.path" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the path of the resources to exclude from the restore.                  
               </wadl:doc>
            </param>
         </representation>
      </request>
      
      <response status="201">                
         <doc title="Created" xml:lang="EN">The request has been accepted for processing, but the processing has not been completed.</doc>
         <representation mediaType="application/json">
            <doc>
               <xsdxt:code href="../wadl/samples-v2/cbu-postRestore_response-json-http.txt"/>
            </doc>
         </representation>
      </response>
      &commonFaults;
   </method>
   
<!--****************************************-->
<!--       List restores for a project      -->
<!--****************************************-->       
   <method name="POST" id="getRestores">
      <wadl:doc title="List the restores for a project">
         <para xmlns="http://docbook.org/ns/docbook" role="shortdesc">Lists the restores available for the specified project.</para>
         <para xmlns="http://docbook.org/ns/docbook">This operation retrieves a list of restores available for the specified project. If no restores have been created, the <code>restores</code> parameter in the response is an empty array.</para>
      </wadl:doc> 
      
      <request>
         <representation mediaType="application/json">
            <doc>
               <xsdxt:code href="../wadl/samples-v2/cbu-getRestores_request-json-htttp.txt"/>
            </doc> 
            <param name="marker" style="query" type="xsd:string"
               required="false">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the <code>id</code> of the last known restore. For example: 4c166552-aee3-416f-8cba-c063090d2aa5</wadl:doc>
            </param>
            <param name="limit" style="query" type="xsd:integer"
               required="false">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the number of restores to list. The default
                  value is 100.
               </wadl:doc>
            </param>
            <param name="sort_dir" style="query" type="xsd:string"
               required="false">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the direction to sort the results. Valid values are <code>asc</code> and <code>desc</code>. The default value is <code>desc</code>.
               </wadl:doc>
            </param>
         </representation>
      </request>
      
      <response status="200">                
         <doc title="OK" xml:lang="EN"/>
         <representation mediaType="application/json"> 
            <doc>
               <xsdxt:code href="../wadl/samples-v2/cbu-getRestores_response-json-http.txt"/>
               <xsdxt:code href="../wadl/samples-v2/cbu-getRestores_response.json"/>
            </doc> 
         </representation>
      </response>
      &commonFaults;
   </method>
   
<!--****************************************-->
<!--       Get details about a restore      -->
<!--****************************************-->       
   <method name="POST" id="getRestoreDetails">
      <wadl:doc title="Post project events">
         <para xmlns="http://docbook.org/ns/docbook" role="shortdesc">Posts events from the API.</para>
         <para xmlns="http://docbook.org/ns/docbook">This operation results in the agent checking for events from the API periodically, based on a schedule. The operation also causes the agent to post heartbeat events periodically so clients can determine if the agent is online or offline. By setting the <code>event</code> to <code>agent_activate</code> the the request, you can then use the <code>mode</code> parameter to indicate how often the agent should post events.</para>
         <note xmlns="http://docbook.org/ns/docbook"><para>After a specified period of time, the agent falls back to a <code>mode</code> of <code>idle</code>.</para></note>
      </wadl:doc> 
      
      <request>
         <representation mediaType="application/json">
            <doc>
               <xsdxt:code href="../wadl/samples-v2/cbu-postEvents_request-json-http.txt"/>
               <xsdxt:code href="../wadl/samples-v2/cbu-postEvents_request.json"/>
            </doc> 
            <param name="event" style="plain" path="$.event" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">For <code>event</code>, use <code>agent_activate</code> to have the client specify how often the agent should perform the post of events.
               </wadl:doc>
            </param>
            <param name="mode" style="plain" path="$.name" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the type of event collection. Valid values are <code>idle</code>, <code>active</code>, and <code>real_time</code>.
                  
                  <code>idle</code> specifies that the agents checks for and posts events periodically, but not frequetnly. You do not have a need to communicate with the agent immediately. Note: Testing the agent's <code>online</code> or <code>offline</code> status is not safe in this <code>mode</code>.
                  <code>active</code> specifies that the agent checks for and posts events frequently.
                  <code>real_time</code> specifies that the agent checks for and posts events very frequently. Typically, in this <code>mode</code>, you want to perform multiple, rapid, time-sensitive tasks with the agent, such as browsing files on the host or in a previous backup.
                  
               </wadl:doc>
            </param> 
         </representation>
      </request>
      
      <response status="202">                
         <doc title="Accepted" xml:lang="EN">The request has been accepted for processing, but the processing has not been completed.</doc>
         <representation mediaType="application/json">                      
         </representation>
      </response>
      &commonFaults;
   </method>
   
<!--********************************-->
<!--       Update a restore         -->
<!--********************************-->       
   <method name="POST" id="updateRestore">
      <wadl:doc title="Post project events">
         <para xmlns="http://docbook.org/ns/docbook" role="shortdesc">Posts events from the API.</para>
         <para xmlns="http://docbook.org/ns/docbook">This operation results in the agent checking for events from the API periodically, based on a schedule. The operation also causes the agent to post heartbeat events periodically so clients can determine if the agent is online or offline. By setting the <code>event</code> to <code>agent_activate</code> the the request, you can then use the <code>mode</code> parameter to indicate how often the agent should post events.</para>
         <note xmlns="http://docbook.org/ns/docbook"><para>After a specified period of time, the agent falls back to a <code>mode</code> of <code>idle</code>.</para></note>
      </wadl:doc> 
      
      <request>
         <representation mediaType="application/json">
            <doc>
               <xsdxt:code href="../wadl/samples-v2/cbu-postEvents_request-json-http.txt"/>
               <xsdxt:code href="../wadl/samples-v2/cbu-postEvents_request.json"/>
            </doc> 
            <param name="event" style="plain" path="$.event" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">For <code>event</code>, use <code>agent_activate</code> to have the client specify how often the agent should perform the post of events.
               </wadl:doc>
            </param>
            <param name="mode" style="plain" path="$.name" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the type of event collection. Valid values are <code>idle</code>, <code>active</code>, and <code>real_time</code>.
                  
                  <code>idle</code> specifies that the agents checks for and posts events periodically, but not frequetnly. You do not have a need to communicate with the agent immediately. Note: Testing the agent's <code>online</code> or <code>offline</code> status is not safe in this <code>mode</code>.
                  <code>active</code> specifies that the agent checks for and posts events frequently.
                  <code>real_time</code> specifies that the agent checks for and posts events very frequently. Typically, in this <code>mode</code>, you want to perform multiple, rapid, time-sensitive tasks with the agent, such as browsing files on the host or in a previous backup.
                  
               </wadl:doc>
            </param> 
         </representation>
      </request>
      
      <response status="202">                
         <doc title="Accepted" xml:lang="EN">The request has been accepted for processing, but the processing has not been completed.</doc>
         <representation mediaType="application/json">                      
         </representation>
      </response>
      &commonFaults;
   </method>
   
<!--*************************************-->
<!--       Get errors for a restore      -->
<!--*************************************-->       
   <method name="POST" id="getRestoreErrors">
      <wadl:doc title="Post project events">
         <para xmlns="http://docbook.org/ns/docbook" role="shortdesc">Posts events from the API.</para>
         <para xmlns="http://docbook.org/ns/docbook">This operation results in the agent checking for events from the API periodically, based on a schedule. The operation also causes the agent to post heartbeat events periodically so clients can determine if the agent is online or offline. By setting the <code>event</code> to <code>agent_activate</code> the the request, you can then use the <code>mode</code> parameter to indicate how often the agent should post events.</para>
         <note xmlns="http://docbook.org/ns/docbook"><para>After a specified period of time, the agent falls back to a <code>mode</code> of <code>idle</code>.</para></note>
      </wadl:doc> 
      
      <request>
         <representation mediaType="application/json">
            <doc>
               <xsdxt:code href="../wadl/samples-v2/cbu-postEvents_request-json-http.txt"/>
               <xsdxt:code href="../wadl/samples-v2/cbu-postEvents_request.json"/>
            </doc> 
            <param name="event" style="plain" path="$.event" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">For <code>event</code>, use <code>agent_activate</code> to have the client specify how often the agent should perform the post of events.
               </wadl:doc>
            </param>
            <param name="mode" style="plain" path="$.name" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the type of event collection. Valid values are <code>idle</code>, <code>active</code>, and <code>real_time</code>.
                  
                  <code>idle</code> specifies that the agents checks for and posts events periodically, but not frequetnly. You do not have a need to communicate with the agent immediately. Note: Testing the agent's <code>online</code> or <code>offline</code> status is not safe in this <code>mode</code>.
                  <code>active</code> specifies that the agent checks for and posts events frequently.
                  <code>real_time</code> specifies that the agent checks for and posts events very frequently. Typically, in this <code>mode</code>, you want to perform multiple, rapid, time-sensitive tasks with the agent, such as browsing files on the host or in a previous backup.
                  
               </wadl:doc>
            </param> 
         </representation>
      </request>
      
      <response status="202">                
         <doc title="Accepted" xml:lang="EN">The request has been accepted for processing, but the processing has not been completed.</doc>
         <representation mediaType="application/json">                      
         </representation>
      </response>
      &commonFaults;
   </method>
   
<!--**************************************-->
<!--       List events for a restore      -->
<!--**************************************-->       
   <method name="POST" id="getRestoreEvents">
      <wadl:doc title="Post project events">
         <para xmlns="http://docbook.org/ns/docbook" role="shortdesc">Posts events from the API.</para>
         <para xmlns="http://docbook.org/ns/docbook">This operation results in the agent checking for events from the API periodically, based on a schedule. The operation also causes the agent to post heartbeat events periodically so clients can determine if the agent is online or offline. By setting the <code>event</code> to <code>agent_activate</code> the the request, you can then use the <code>mode</code> parameter to indicate how often the agent should post events.</para>
         <note xmlns="http://docbook.org/ns/docbook"><para>After a specified period of time, the agent falls back to a <code>mode</code> of <code>idle</code>.</para></note>
      </wadl:doc> 
      
      <request>
         <representation mediaType="application/json">
            <doc>
               <xsdxt:code href="../wadl/samples-v2/cbu-postEvents_request-json-http.txt"/>
               <xsdxt:code href="../wadl/samples-v2/cbu-postEvents_request.json"/>
            </doc> 
            <param name="event" style="plain" path="$.event" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">For <code>event</code>, use <code>agent_activate</code> to have the client specify how often the agent should perform the post of events.
               </wadl:doc>
            </param>
            <param name="mode" style="plain" path="$.name" required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN">Specifies the type of event collection. Valid values are <code>idle</code>, <code>active</code>, and <code>real_time</code>.
                  
                  <code>idle</code> specifies that the agents checks for and posts events periodically, but not frequetnly. You do not have a need to communicate with the agent immediately. Note: Testing the agent's <code>online</code> or <code>offline</code> status is not safe in this <code>mode</code>.
                  <code>active</code> specifies that the agent checks for and posts events frequently.
                  <code>real_time</code> specifies that the agent checks for and posts events very frequently. Typically, in this <code>mode</code>, you want to perform multiple, rapid, time-sensitive tasks with the agent, such as browsing files on the host or in a previous backup.
                  
               </wadl:doc>
            </param> 
         </representation>
      </request>
      
      <response status="202">                
         <doc title="Accepted" xml:lang="EN">The request has been accepted for processing, but the processing has not been completed.</doc>
         <representation mediaType="application/json">                      
         </representation>
      </response>
      &commonFaults;
   </method>
 
</application>