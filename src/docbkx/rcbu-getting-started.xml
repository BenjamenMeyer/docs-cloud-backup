<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash "&#x2013;">
        <!ENTITY mdash "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">

        <!-- Useful for specs -->
        <!ENTITY MIGHT '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MIGHT</emphasis>'>
        <!ENTITY SHOULD '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">SHOULD</emphasis>'>
        <!ENTITY MUST '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST</emphasis>'>
        <!ENTITY MUST_NOT '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST NOT</emphasis>'>

        <!ENTITY CHECK '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Check_mark_23x20_02.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>

        <!ENTITY ARROW '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Arrow_east.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>
]>
<book version="5.0" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
    xml:id="rcbu-getting-started">
    <?rax title.font.size="40px" subtitle.font.size="30px"?>
    <title>Rackspace Cloud Backup Getting Started Guide</title>
    <?rax status.bar.text.font.size="40px"
          status.bar.text=""?>
    <titleabbrev>Rackspace Cloud Backup Getting Started Guide</titleabbrev>
    <info>
        <copyright>
            <year>2014</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>API v1.0</releaseinfo>
        <productname>Rackspace Cloud Backup</productname>
        <pubdate/>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the doc build process.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for software developers interested in developing
                applications using the Rackspace Cloud Backup Application Programming Interface
                    (<abbrev>API</abbrev>). </para>
        </abstract>
        <revhistory>
            <revision>
                <date>2014-07-30</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Initial publishing of this guide.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
        </revhistory>
        <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
            <raxm:displayname>Getting Started Guide</raxm:displayname>
            <raxm:product version="v1.0">rcbu</raxm:product>
            <raxm:priority>10</raxm:priority>
        </raxm:metadata>
    </info>
    <chapter xml:id="docChangeHistory">
        <title>Document change history</title>
        <para>This version of the guide replaces and obsoletes all earlier versions. The most recent
            changes are described in the following table:</para>
        <?rax revhistory?>
    </chapter>
    <chapter xml:id="Overview-d1e01">
        <title>Overview</title>
        <para>Rackspace Cloud Backup is a service that allows you to select and backup specific
            files and folders from your Cloud Server. You can schedule any number of backup jobs and
            restore to the same system or a different one, which gives you the flexibility and power
            to work with your schedule and your data. </para>
        <para>Using the Cloud Backup RESTful API, it is easy to automate backup jobs while
            provisioning new servers. Merged into a Chef cookbook or in any other automation system,
            backups are a part of the deployment rather than something to consider and handle later. </para>
        <para>Key features are</para>
        <itemizedlist>
            <listitem>
                <para>Select the files and folders from your Cloud Server that you want to back
                    up</para>
            </listitem>
            <listitem>
                <para>Run your backups manually or on a schedule that works for you</para>
            </listitem>
            <listitem>
                <para>See the activity from all your backups, both current and previous</para>
            </listitem>
            <listitem>
                <para>Use AES-256 encryption with a private encryption key known only to you</para>
            </listitem>
            <listitem>
                <para>Restore individual files and folders from a particular date</para>
            </listitem>
            <listitem>
                <para>Save space with incremental backups that only save the changed portions of
                    files</para>
            </listitem>
            <listitem>
                <para>Create unlimited backups</para>
            </listitem>
        </itemizedlist>
        <note xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <para>Rackspace Cloud Backup does not take snapshots of your server. To read more about
                how Rackspace Cloud Backup differs from snapshots, see <link
                    xlink:href="  http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-vs-cloud-server-image-backups"
                    > "Rackspace Cloud Backup vs. Cloud Server Image Backups"</link> in the
                Rackspace Knowledge Center. </para>
        </note>
        <para>Follow the steps provided in this guide to use the Rackspace Cloud Backup API to
            create backups and use them to restore your files and folders. </para>
        <para>The simple exercises in this guide help you get started with the API by using cURL
            commands. With cURL, you send HTTP requests with embedded API calls from the command
            line. The cURL examples in this guide include request and response bodies in JSON
            format. For more information about cURL, see <xref linkend="usingCurl-d1e01"/>.</para>
        <para>To use the API, it helps to be familiar with HTTP 1.1, RESTful web services, and JSON
            data serialization format.</para>
        <para>You can find details about the Rackspace Cloud Backup API in the <emphasis
                role="italic">Cloud Backup Developer Guide</emphasis> at <link
                xlink:href="http://docs.rackspace.com/">http://docs.rackspace.com/</link>.</para>
        <para>For more details about Cloud Backup, refer to <link
                xlink:href="http://www.rackspace.com/cloud/backup/"
                >http://www.rackspace.com/cloud/queues/</link>. This site also offers links to
            Rackspace's official support channels, including phone, chat, and email as well as
            Knowledge Center articles.</para>
        <section xml:id="prerequisitesForRunningExamples-d1e01">
            <title>Prerequisites for running examples</title>
            <para>To run the examples in this guide, you must have the following prerequisites:
                    <itemizedlist spacing="compact">
                    <listitem>
                        <para>Rackspace Cloud account</para>
                        <para>To sign up for a Rackspace Cloud account, go to the <link
                                xlink:href="https://cart.rackspace.com/cloud/"
                                xmlns:m="http://www.w3.org/the key 1998/Math/MathML">signup
                                page</link>.</para>
                    </listitem>
                    <listitem>
                        <para>Rackspace Cloud user name and password, as specified during
                            registration</para>
                    </listitem>
                </itemizedlist></para>
            <para>You also need to know your API key. To find your API key, use the following
                steps:</para>
            <para>
                <itemizedlist spacing="compact">
                    <listitem>
                        <para><emphasis role="bold">To find your API key:</emphasis>
                        </para>
                        <orderedlist>
                            <listitem>
                                <para>Log in to the Cloud Control Panel (<link
                                        xlink:href="https://mycloud.rackspace.com"
                                        >https://mycloud.rackspace.com</link>).</para>
                            </listitem>
                            <listitem>
                                <para>On the upper-right side of the top navigation pane, click your
                                    username.</para>
                            </listitem>
                            <listitem>
                                <para>From the menu, select <guilabel>Account
                                    Settings</guilabel>.</para>
                            </listitem>
                            <listitem>
                                <para>In the Login Details section of the Account Settings page,
                                    locate the <guilabel>API Key</guilabel> field and click
                                        <guibutton>Show</guibutton>.</para>
                            </listitem>
                            <listitem>
                                <para>Copy the value of the API Key and paste it into a text editor
                                    of your choice.</para>
                            </listitem>
                            <listitem>
                                <para>Click <guibutton>Hide</guibutton> to hide the value of the API
                                    Key.</para>
                            </listitem>
                        </orderedlist>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section xml:id="pricingAndServiceLevel-d1e01">
            <title>Pricing and service level</title>
            <para>Cloud Backup is part of the Rackspace Cloud and your use of the Cloud Backup API
                is billed according to the pricing schedule at <link
                    xlink:href="http://www.rackspace.com/cloud/backup/pricing/"
                    >http://www.rackspace.com/cloud/backup/pricing/</link>. Information about
                service level agreements (SLAs) is also available from that link.</para>
        </section>
    </chapter>
    <chapter xml:id="sendRequestsToAPI-d1e01">
        <title>Send requests to the API</title>
        <para>You have several options for sending requests through an API including the following: </para>
        <itemizedlist>
            <listitem>
                <para>Developers and testers might prefer to use cURL, the command-line tool from
                        <link xlink:href="http://curl.haxx.se/">http://curl.haxx.se/</link>.</para>
                <para>With cURL, you can send HTTP requests and receive responses back from the
                    command line. cURL is used in this guide. </para>
            </listitem>
            <listitem>
                <para>If you like to use a more graphical interface, the REST client for Mozilla
                    Firefox works well for testing and trying out commands. See <link
                        xlink:href="https://addons.mozilla.org/en-US/firefox/addon/restclient/"
                        >https://addons.mozilla.org/en-US/firefox/addon/restclient/</link>. </para>
            </listitem>
            <listitem>
                <para>You can download and install RESTClient, a Java application used to test
                    RESTful web services, from <link
                        xlink:href="http://code.google.com/p/rest-client/"
                        >http://code.google.com/p/rest-client/</link>. </para>
            </listitem>
        </itemizedlist>
        <section xml:id="usingCurl-d1e01">
            <title>Sending API requests by using cURL</title>
            <para>cURL is a command-line tool that is available in UNIX® system-based environments
                and Apple Mac OS X® systems, and can be downloaded for Microsoft Windows® to
                interact with REST interfaces. For more information about cURL, see <link
                    xlink:href="http://curl.haxx.se/">http://curl.haxx.se/</link>.</para>
            <para>cURL enables you to transmit and receive HTTP requests and responses from the
                command line or from within a shell script. As a result, you can work with the REST
                API directly without using one of the client APIs.</para>
            <para>The following cURL command-line options are used in this guide to run the
                examples:</para>
            <table rules="all">
                <caption>cURL command-line options</caption>
                <col width="25%"/>
                <col width="75%"/>
                <thead>
                    <tr>
                        <th>Option</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>-d</code></td>
                        <td>Sends the specified data in a <command>POST</command> request to the
                            HTTP server.</td>
                    </tr>
                    <tr>
                        <td><code>-i</code></td>
                        <td>Includes the HTTP header in the output.</td>
                    </tr>
                    <tr>
                        <td><code>-H HEADER</code></td>
                        <td>Specifies an HTTP header in the request. You can specify any number of
                            extra headers. Precede each header with the <code>-H</code> option. </td>
                    </tr>
                    <tr>
                        <td><code>-s</code></td>
                        <td>Specifies silent or quiet mode. Does not show progress or error
                            messages. If your cURL command is not generating any output, try
                            replacing the <code>-s</code> option with <code>-i</code>. </td>
                    </tr>
                    <tr>
                        <td><code>-X</code></td>
                        <td>Specifies the request operation to use when communicating with the HTTP
                            server. The specified request is used instead of the default operation,
                            which is <command>GET</command>. For example, <code>-X PUT</code>
                            specifies to use the <command>PUT</command> operation.</td>
                    </tr>
                </tbody>
            </table>
            <note>
                <para>If you have the tools, you can run the cURL JSON request examples with the
                    following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                        request example> | python -m json.tool</command>.</para>
            </note>
        </section>
        <section xml:id="copyPastCurl-d1e01">
            <title>Copying and pasting cURL request examples into a terminal window</title>
            <para>To run the cURL request examples shown in this guide, perform the following
                actions:</para>
            <orderedlist>
                <listitem>
                    <para>Copy each example from the HTML version of this guide and paste it into an
                        ASCII text editor (for example, vi or TextEdit). You can click on the small
                        document icon to the right of each request example to select it.</para>
                </listitem>
                <listitem>
                    <para>Modify each example with your required account information and other
                        information, as detailed in this guide.</para>
                    <note>
                        <para>The carriage returns in the cURL request examples are escaped with a
                            backslash (\) character. The escape character allows continuation of the
                            command across multiple lines. However, do not include the escape
                            character in the JSON or XML request body within the cURL
                            command.</para>
                    </note>
                </listitem>
                <listitem>
                    <para>After you are finished modifying the text for the cURL request example
                        with your information (for example, user name and API key), copy and paste
                        the text into your terminal window.</para>
                </listitem>
                <listitem>
                    <para>Press <keycombo>
                            <keycap>Enter</keycap>
                        </keycombo> to run the cURL command.</para>
                </listitem>
            </orderedlist>
            <para>Consider the following cURL authentication request: JSON example, which is
                described in detail in <xref linkend="generateAuthenticationToken-d1e01"/>.</para>
            <example>
                <title>cURL authentication request: JSON</title>
                <?dbfo keep-together="always"?>
                <screen language="bash"><command>curl</command> <option>-s</option> <option>-X</option> POST https://identity.api.rackspacecloud.com/v2.0/tokens \
  -H "Content-Type: application/json" \
  -d '{
    "auth": {
      "RAX-KSKEY:apiKeyCredentials": {
        "username": "<emphasis role="bold">yourUserName</emphasis>",
        "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"
      }
    }
  }' | python -m json.tool </screen>
            </example>
            <para>You can see that the lines that are part of the cURL command syntax have all been
                escaped with a backslash ('\') to indicate that the command continues on the next
                line:</para>
            <screen language="bash"><command>curl</command> <option>-s</option> <option>-X</option> POST https://identity.api.rackspacecloud.com/v2.0/tokens \
  -H "Content-Type: application/json" \
  -d '{
   
(... lines within the JSON portion of the message are not shown in this example)
(... the example shows only lines that are part of cURL syntax)     
     

   
 }' | python -m json.tool </screen>
            <para>However, the lines <emphasis role="italic">within</emphasis> the JSON portion of
                the message are not escaped with a backslash, to avoid issues with the JSON
                processing. </para>
            <screen language="bash">'{
    "auth": {
      "RAX-KSKEY:apiKeyCredentials": {
        "username": "<emphasis role="bold">yourUserName</emphasis>",
        "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"
      }
    }
  }'
</screen>
            <tip>
                <para>If you have trouble copying and pasting the examples as described, try typing
                    the entire example on one long line, removing all the backslash
                    line-continuation characters.</para>
            </tip>
        </section>
    </chapter>
    <chapter xml:id="serviceAccessEndpoints-d1e753">
        <title>Service access endpoints</title>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">The Cloud Backup Service is a
            regionalized service. The user of the service is therefore responsible for appropriate
            replication, caching, and overall maintenance of Cloud Backup data across regional
            boundaries to other Cloud Backup servers.</para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">You can find the available service
            endpoints for Cloud Backup in the following table. </para>
        <?rax-fo keep-with-next?>
        <tip>
            <para>To help you decide which regionalized endpoint to use, read about special
                considerations for choosing a data center at <link
                    xlink:href="http://www.rackspace.com/knowledge_center/article/what-is-ord-and-dfw"
                    >http://www.rackspace.com/knowledge_center/article/what-is-ord-and-dfw</link>.
                <!--
2014-07-21 rose.coste
David Hendler confirms this is the right KC article:
at the same location, it has a new page title, "Where are the Rackspace data centers (DFW, LON, HKG, etc.)?"
<link xlink:href="http://www.rackspace.com/knowledge_center/article/what-is-ord-and-dfw">http://www.rackspace.com/knowledge_center/article/what-is-ord-and-dfw</link>.
-->
            </para>
        </tip> 
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <table rules="all">
                <caption>Regionalized service endpoints</caption>
                <col width="27%"/>
                <col width="73%"/>
                <thead>
                    <tr>
                        <th>Region</th>
                        <th>Endpoint</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Dallas/Ft. Worth (DFW)</td>
                        <td><code>https://dfw.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code>
                        </td>
                    </tr>
                    <tr>
                        <td>Chicago (ORD)</td>
                        <td><code>https://ord.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code></td>
                    </tr>
                    <tr>
                        <td>London (LON) </td>
                        <td><code>https://lon.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code></td>
                    </tr>
                    <tr>
                        <td>Hong Kong (HKG)</td>
                        <td><code>https://hkg.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code></td>
                    </tr>
                    <tr>
                        <td>Northern Virginia (IAD)</td>
                        <td><code>https://iad.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code></td>
                    </tr>
                    <tr>
                        <td>Sydney (SYD)</td>
                        <td><code>https://syd.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code></td>
                    </tr>
                </tbody>
            </table>
        </para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">Replace the sample account ID number
            (which is also called the tenant ID), <parameter>123456</parameter>, with your actual
            account number that is returned as part of the Cloud Identity service response.</para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">You will find the actual account number
            after the final '/' in the <code>publicURL</code> field returned by the authentication
            response.</para>
        <note xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <para>The Cloud Backup API runs with or without the specification of the account ID
                number in the endpoint. However, the examples in this guide include the account
                number in the request URIs.</para>
        </note>
    </chapter>
    <chapter xml:id="generateAuthenticationToken-d1e01">
        <title>Generate an authentication token</title>
        <para>Your first step must always be to generate an authentication token. You must then
            include the authentication token in each request in the <code>X-Auth-Token</code>
            header. </para>
        <para>Remember to replace the placeholders in the following authentication request example
            with your information:<itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold">yourUserName</emphasis> &mdash;Your common Rackspace
                        Cloud user name, as supplied during registration.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">yourApiKey</emphasis> &mdash; Your API key. </para>
                    <para>See <xref linkend="prerequisitesForRunningExamples-d1e01"/> for the steps
                        to use to find your API key. </para>
                </listitem>
            </itemizedlist></para>
        <para>Notice that you authenticate by using the URL for the Cloud Identity service,
                <code>https://identity.api.rackspacecloud.com/v2.0/tokens</code>, as shown in the
            following authentication request example. </para>
        <note>
            <para>For UK-based accounts, you might use
                    <code>'https://lon.identity.api.rackspacecloud.com/v2.0/tokens'</code>
                instead.</para>
        </note>
        <para>The cURL request uses  the <code>-s</code> option for silent or quiet mode (no
            progress or error messages shown), the <code>-X</code> option to specify the request
            operation to use when communicating with the HTTP server (instead of using the default
            operation),  and the <code>-d</code> option to send the specified data in a
                <command>POST</command> request to the HTTP server.</para>
        <para>If you have the tools, you can run the cURL JSON request examples with the following
            option to format the output from cURL: <?sbr?><command>&lt;cURL JSON request example> |
                python -m json.tool</command>.</para>
        <example>
            <title>cURL authentication request: JSON</title>
            <?dbfo keep-together="always"?>
            <screen language="bash"><command>curl</command> <option>-s</option> <option>-X</option> POST https://identity.api.rackspacecloud.com/v2.0/tokens \
  -H "Content-Type: application/json" \
  -d '{
    "auth": {
      "RAX-KSKEY:apiKeyCredentials": {
        "username": "<emphasis role="bold">yourUserName</emphasis>",
        "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"
      }
    }
  }' | python -m json.tool</screen>
        </example>
        <para>An HTTP status code of 200 (OK) indicates that the authentication request completed
            successfully.</para>
        <para>In the authentication response, the authentication token <code>id</code> is returned
            near the bottom of the following example with an <code>expires</code> attribute that
            specifies when the token expires. Tokens are valid for a finite duration, typically for
            24 hours. Remember to supply your authentication token wherever you see the placeholder
                <emphasis role="bold">yourAuthToken</emphasis> in the examples in this guide.</para>
        <para>The <code>publicURL</code> endpoints for Cloud Backup (for example
                <code>https://dfw.backup.api.rackspacecloud.com/v1.0/123456</code>) are also
            returned in the authentication response. </para>
        <para>Your actual account number is after the final slash (/) in the <code>publicURL</code>
            field, for example <code>123456</code> in the preceding example endpoint. You must
            specify <emphasis role="italic">your</emphasis> account number in the Cloud Backup API
            request, wherever you see the placeholder <emphasis role="bold">yourAccountID</emphasis>
            specified in the examples in this guide.</para>
        <example>
            <title>Authentication response with partial service catalog showing Cloud Backup
                endpoints </title>
            <programlisting language="json"><xi:include href="../../src/docbkx/samples/auth-20-rcbu_gettingStartedGuide.json" parse="text"/></programlisting>
        </example>
        <para>After authentication, you can use cURL to perform the <command>GET</command>,
                <command>DELETE</command>, <command>PUT</command>, and <command>POST</command>
            requests for the Cloud Backup API.</para>
    </chapter>
    <chapter xml:id="createWorkWithBackups-d1e01">
        <title>Create and work with backups</title>
        <para>This chapter contains simple examples of some basic Cloud Backup requests that you
            will commonly use. Example requests are provided in cURL, followed by the response. </para>
        <para>For more information about all Cloud Backup operations, see the <emphasis
                role="italic">Cloud Backup Developer Guide</emphasis>.</para>
        <section xml:id="listAllAgentsForTheUser-d1e01"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>List all agents for the user</title>
            <para>The agent is an important piece of the equation in Cloud Backup. You must install
                the agent on all servers that you want to backup. Documentation about installing
                agents is available from the link on Rackspace Control Panel under the <emphasis
                    role="bold">Backup</emphasis> tab or you can go directly to the Knowledge Center
                article at <link
                    xlink:href="http://http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-install-the-agent-linux-0/"
                    >http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-install-the-agent-linux-0</link>.
                Once you have your agent installed on one or many servers, you can use the Cloud
                Backup API to configure your backups.</para>
            <para>Assuming that you initially know nothing about the environment, in order to do
                anything with the backups, you need to list the agents. After you list them, you can
                choose the one you want to work with.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The cURL request uses  the
                    <code>-s</code> option for silent or quiet mode (no progress or error messages
                shown) and the <code>-X</code> option to specify the request operation to use when
                communicating with the HTTP server (instead of using the default operation).</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">If you have the tools, you can run
                the cURL JSON request examples with the following option to format the output from
                cURL: <?sbr?><command>&lt;cURL JSON request example> | python -m
                json.tool</command>.</para>
            <para>An HTTP status code of 200 (OK) indicates that the request succeeded.</para>
            <example>
                <title>List all agents for the user: cURL</title>
                <programlisting>
curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/user/agents \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" | python -m json.tool  </programlisting>
                <programlisting>
 [
    {
        "AgentVersion": "1.10.006176", 
        "Architecture": "64-bit", 
        "BackupContainer": "https://storage101.dfw1.clouddrive.com/v1/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880321/z_DO_NOT_DELETE_CloudBackup_v2_0_f5a7dc7f-34f2-4be8-90ff-02585fe60a6c", 
        "BackupDatacenter": "DFW", 
        "BackupVaultSize": null, 
        "CleanupAllowed": true, 
        "Datacenter": "DFW", 
        "Flavor": "RaxCloudServer", 
        "HostServerId": "79aa4aa1-cd86-4416-a6c4-6942b7083130", 
        "IPAddress": "162.209.73.233", 
        "IsDisabled": false, 
        "IsEncrypted": false, 
        "MachineAgentId": 202743, 
        "MachineName": "web2", 
        "OperatingSystem": "Windows Server 2008 R2", 
        "OperatingSystemVersion": "6.1", 
        "PublicKey": {
            "ExponentHex": 10001, 
            "ModulusHex": "C6054E90E32D2B25E16F3A560E1B4DC580B1E4AB74E0C662680DD8A1BD83956051F6A526B16C55225D1BE6E0B1265F4085FB2F61B61337F5D32198E5CAFFEACD50E90517A329146E43B20194C082A9C890060AD07A542FBC035B2A96F9F212C6D94887BECB5E15F3E55397B975B1896CFC66EBB5DD7D83587467A0E7F669ADB925A7BE4C1ECED1BC9E92DB768CE76FDC86CCDD04BDF469679FE3261AA66C22AC6263E540B79780AAF09CFC798CDC4D1218867388632EA4BD1BF511E4881E07C5387DDDBE741E615ACA0C32A738F5B952F1C17051EC3BAF9F64C629515EA2AF93E6BB450A8B1B3E02963471679D5670AF93CFEA649172EDA7AC5E071E2D3AF0BD"
        }, 
        "Status": "Unknown", 
        "TimeOfLastSuccessfulBackup": null, 
        "UseFailoverUri": false, 
        "UseServiceNet": true
    }
]
</programlisting>
            </example>
        </section>
        <section xml:id="listAgentDetails-d1e01"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>List agent details </title>
            <para>To check if the agent is online, list the agent details and check its status. If
                the agent is not online, Cloud Backup cannot run the backup job.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The cURL request uses  the
                    <code>-s</code> option for silent or quiet mode (no progress or error messages
                shown) and the <code>-X</code> option to specify the request operation to use when
                communicating with the HTTP server (instead of using the default operation).</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">If you have the tools, you can run
                the cURL JSON request examples with the following option to format the output from
                cURL: <?sbr?><command>&lt;cURL JSON request example> | python -m
                json.tool</command>.</para>
            <para>An HTTP status code of 200 (OK) in the response indicates that the request
                succeeded.</para>
            <example>
                <title>List agent details: cURL</title>
                <programlisting>
curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/agent/<emphasis role="bold">yourMachineAgentId </emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" | python -m json.tool
</programlisting>
                <programlisting>
{
    "AgentVersion": "1.10.006176", 
    "Architecture": "64-bit", 
    "BackupContainer": "https://storage101.dfw1.clouddrive.com/v1/MossoCloudFS_0672d7fa-9f85-4a81-a3ab-adb66a880321/z_DO_NOT_DELETE_CloudBackup_v2_0_f5a7dc7f-34f2-4be8-90ff-02585fe60a6c", 
    "BackupDatacenter": "DFW", 
    "BackupVaultSize": "35.3 KB", 
    "CleanupAllowed": true, 
    "Datacenter": "DFW", 
    "Flavor": "RaxCloudServer", 
    "HostServerId": "79aa4aa1-cd86-4416-a6c4-6942b7083130", 
    "IPAddress": "162.209.73.233", 
    "IsDisabled": false, 
    "IsEncrypted": false, 
    "MachineAgentId": 202743, 
    "MachineName": "web2", 
    "OperatingSystem": "Windows Server 2008 R2", 
    "OperatingSystemVersion": "6.1", 
    "PublicKey": {
        "ExponentHex": 10001, 
        "ModulusHex": "C6054E90E32D2B25E16F3A560E1B4DC580B1E4AB74E0C662680DD8A1BD83956051F6A526B16C55225D1BE6E0B1265F4085FB2F61B61337F5D32198E5CAFFEACD50E90517A329146E43B20194C082A9C890060AD07A542FBC035B2A96F9F212C6D94887BECB5E15F3E55397B975B1896CFC66EBB5DD7D83587467A0E7F669ADB925A7BE4C1ECED1BC9E92DB768CE76FDC86CCDD04BDF469679FE3261AA66C22AC6263E540B79780AAF09CFC798CDC4D1218867388632EA4BD1BF511E4881E07C5387DDDBE741E615ACA0C32A738F5B952F1C17051EC3BAF9F64C629515EA2AF93E6BB450A8B1B3E02963471679D5670AF93CFEA649172EDA7AC5E071E2D3AF0BD"
    }, 
    "Status": "Online", 
    "TimeOfLastSuccessfulBackup": null, 
    "UseFailoverUri": false, 
    "UseServiceNet": true
}
</programlisting>
            </example>
        </section>
        <section xml:id="createBackupConfiguration-d1e01">
            <title>Create backup configuration</title>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">Create a backup configuration
                where you define the following basic items:<itemizedlist>
                    <listitem>
                        <para>the name of the backup</para>
                    </listitem>
                    <listitem>
                        <para>what you want to backup</para>
                    </listitem>
                    <listitem>
                        <para>when you want to backup</para>
                    </listitem>
                    <listitem>
                        <para>how often you want to backup</para>
                    </listitem>
                </itemizedlist></para>
            <para>Look carefully at <code>Inclusions</code> and <code>Exclusions</code>. Note that
                each exclusion must be under an included folder. If you like, you can
                programmatically create many configuration files like this with small changes for
                each server you create. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses  the <code>-s</code> option for silent or quiet mode (no
                progress or error messages shown) and the <code>-X</code> option to specify the
                request operation to use when communicating with the HTTP server (instead of using
                the default operation).</para>
            <para>If you have the tools, you can run the cURL JSON request examples with the
                following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                    request example> | python -m json.tool</command>.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the request succeeded.</para>
            <example>
                <title>Create backup configuration: cURL</title>
                <programlisting language="bash">
curl -s -X POST https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/backup-configuration \
-H "X-Auth-Token: <emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" \
-d '{
    "MachineAgentId": 202743,
    "BackupConfigurationName": "Weekly Website Backup",
    "IsActive": true,
    "VersionRetention": 30,
    "MissedBackupActionId": 1,
    "Frequency": "Weekly",
    "StartTimeHour": 7,
    "StartTimeMinute": 30,
    "StartTimeAmPm": "PM",
    "DayOfWeekId": 5,
    "HourInterval": null,
    "TimeZoneId": "Eastern Standard Time",
    "NotifyRecipients": "test@my-email-address.com",
    "NotifySuccess": true,
    "NotifyFailure": true,
    "Inclusions": [
        {
            "FilePath": "C:\\backup_up_file.txt",
            "FileItemType": "File"
        },
        {
            "FilePath": "C:\\backed_up_folder",
            "FileItemType": "Folder"
        }
    ],
    "Exclusions": [
        {
            "FilePath": "C:\\backed_up_folder\\excluded_file.txt",
            "FileItemType": "File"
        }
    ]
}'  | python -m json.tool 
 </programlisting>
                <programlisting>
{
    "BackupConfigurationId": 174084, 
    "BackupConfigurationName": "Weekly Website Backup", 
    "BackupConfigurationScheduleId": 173131, 
    "BackupPostscript": "", 
    "BackupPrescript": "", 
    "Datacenter": "DFW", 
    "DayOfWeekId": 5, 
    "EncryptionKey": {
        "ExponentHex": 10001, 
        "ModulusHex": "C6054E90E32D2B25E16F3A560E1B4DC580B1E4AB74E0C662680DD8A1BD83956051F6A526B16C55225D1BE6E0B1265F4085FB2F61B61337F5D32198E5CAFFEACD50E90517A329146E43B20194C082A9C890060AD07A542FBC035B2A96F9F212C6D94887BECB5E15F3E55397B975B1896CFC66EBB5DD7D83587467A0E7F669ADB925A7BE4C1ECED1BC9E92DB768CE76FDC86CCDD04BDF469679FE3261AA66C22AC6263E540B79780AAF09CFC798CDC4D1218867388632EA4BD1BF511E4881E07C5387DDDBE741E615ACA0C32A738F5B952F1C17051EC3BAF9F64C629515EA2AF93E6BB450A8B1B3E02963471679D5670AF93CFEA649172EDA7AC5E071E2D3AF0BD"
    }, 
    "Exclusions": [
        {
            "FileId": 657293, 
            "FileItemType": "File", 
            "FilePath": "C:\\backed_up_folder\\excluded_file.txt", 
            "FilePathEncoded": null, 
            "Filter": "Exclude", 
            "ParentId": 174084
        }
    ], 
    "Flavor": "RaxCloudServer", 
    "Frequency": "Weekly", 
    "HourInterval": null, 
    "Inclusions": [
        {
            "FileId": 657291, 
            "FileItemType": "File", 
            "FilePath": "C:\\backup_up_file.txt", 
            "FilePathEncoded": null, 
            "Filter": "Include", 
            "ParentId": 174084
        }, 
        {
            "FileId": 657292, 
            "FileItemType": "Folder", 
            "FilePath": "C:\\backed_up_folder", 
            "FilePathEncoded": null, 
            "Filter": "Include", 
            "ParentId": 174084
        }
    ], 
    "IsActive": true, 
    "IsDeleted": false, 
    "IsEncrypted": false, 
    "LastRunBackupReportId": null, 
    "LastRunTime": null, 
    "MachineAgentId": 202743, 
    "MachineName": "web2", 
    "MissedBackupActionId": 1, 
    "NextScheduledRunTime": "/Date(1406935800000)/", 
    "NotifyFailure": true, 
    "NotifyRecipients": "test@my-email-address.com", 
    "NotifySuccess": true, 
    "StartTimeAmPm": "PM", 
    "StartTimeHour": 11, 
    "StartTimeMinute": 30, 
    "TimeZoneId": "Eastern Standard Time", 
    "VersionRetention": 30
}
</programlisting>
            </example>
        </section>
        <section xml:id="listCurrentBackupConfigurations-d1e01">
            <title>List all backup configurations for an agent</title>
            <para>List all backup configurations for your agent to double check that your backup
                configuration is there. The output is similar to that in <xref
                    linkend="createBackupConfiguration-d1e01"/>. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses  the <code>-s</code> option for silent or quiet mode (no
                progress or error messages shown) and the <code>-X</code> option to specify the
                request operation to use when communicating with the HTTP server (instead of using
                the default operation).</para>
            <para>If you have the tools, you can run the cURL JSON request examples with the
                following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                    request example> | python -m json.tool</command>.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the request succeeded.</para>
            <example>
                <title>List all backup configurations for an agent: cURL</title>
                <programlisting language="bash">
curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/backup-configuration/system/{machineAgentId} \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" | python -m json.tool
</programlisting>
                <programlisting>
[   
    {
        "BackupConfigurationId": 174084, 
        "BackupConfigurationName": "Weekly Website Backup", 
        "BackupConfigurationScheduleId": 173131, 
        "BackupPostscript": "", 
        "BackupPrescript": "", 
        "Datacenter": "DFW", 
        "DayOfWeekId": 5, 
        "EncryptionKey": {
            "ExponentHex": 10001, 
            "ModulusHex": "C6054E90E32D2B25E16F3A560E1B4DC580B1E4AB74E0C662680DD8A1BD83956051F6A526B16C55225D1BE6E0B1265F4085FB2F61B61337F5D32198E5CAFFEACD50E90517A329146E43B20194C082A9C890060AD07A542FBC035B2A96F9F212C6D94887BECB5E15F3E55397B975B1896CFC66EBB5DD7D83587467A0E7F669ADB925A7BE4C1ECED1BC9E92DB768CE76FDC86CCDD04BDF469679FE3261AA66C22AC6263E540B79780AAF09CFC798CDC4D1218867388632EA4BD1BF511E4881E07C5387DDDBE741E615ACA0C32A738F5B952F1C17051EC3BAF9F64C629515EA2AF93E6BB450A8B1B3E02963471679D5670AF93CFEA649172EDA7AC5E071E2D3AF0BD"
        }, 
        "Exclusions": [
            {
                "FileId": 657293, 
                "FileItemType": "File", 
                "FilePath": "C:\\backed_up_folder\\excluded_file.txt", 
                "FilePathEncoded": null, 
                "Filter": "Exclude", 
                "ParentId": 174084
            }
        ], 
        "Flavor": "RaxCloudServer", 
        "Frequency": "Weekly", 
        "HourInterval": null, 
        "Inclusions": [
            {
                "FileId": 657291, 
                "FileItemType": "File", 
                "FilePath": "C:\\backup_up_file.txt", 
                "FilePathEncoded": null, 
                "Filter": "Include", 
                "ParentId": 174084
            }, 
            {
                "FileId": 657292, 
                "FileItemType": "Folder", 
                "FilePath": "C:\\backed_up_folder", 
                "FilePathEncoded": null, 
                "Filter": "Include", 
                "ParentId": 174084
            }
        ], 
        "IsActive": true, 
        "IsDeleted": false, 
        "IsEncrypted": false, 
        "LastRunBackupReportId": null, 
        "LastRunTime": null, 
        "MachineAgentId": 202743, 
        "MachineName": "web2", 
        "MissedBackupActionId": 1, 
        "NextScheduledRunTime": "/Date(1406935800000)/", 
        "NotifyFailure": true, 
        "NotifyRecipients": "test@my-email-address.com", 
        "NotifySuccess": true, 
        "StartTimeAmPm": "PM", 
        "StartTimeHour": 11, 
        "StartTimeMinute": 30, 
        "TimeZoneId": "Eastern Standard Time", 
        "VersionRetention": 30
    }
]

</programlisting>
            </example>
        </section>
        <section xml:id="updateTheConfiguration-d1e01">
            <title>Update the backup configuration</title>
            <para>Update the backup configuration you created earlier to schedule the backup for one
                hour later. Specify your <code>BackupConfigurationId</code> in the URI. Send the
                same JSON content that you used in <xref linkend="createBackupConfiguration-d1e01"/>
                but make the following changes: <itemizedlist>
                    <listitem>
                        <para>Add <code>v2</code> to <code>BackupConfigurationName</code>.</para>
                    </listitem>
                    <listitem>
                        <para>Change <code>StartTimeHour</code> to <code>8</code>. </para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses  the <code>-s</code> option for silent or quiet mode (no
                progress or error messages shown) and the <code>-X</code> option to specify the
                request operation to use when communicating with the HTTP server (instead of using
                the default operation).</para>
            <para>If you have the tools, you can run the cURL JSON request examples with the
                following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                    request example> | python -m json.tool</command>.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">This operation does not
                return a response body. An HTTP status code of 200 (OK) in the response indicates
                that the request succeeded.</para>
            <example>
                <title>Update the backup configuration: cURL</title>
                <programlisting language="bash">
curl -i -X PUT https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/backup-configuration/<emphasis role="bold">yourBackupConfigurationId</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" \
-d '{
    "MachineAgentId": 202743,
    "BackupConfigurationName": "Weekly Website Backup v2",
    "IsActive": true,
    "VersionRetention": 30,
    "MissedBackupActionId": 1,
    "Frequency": "Weekly",
    "StartTimeHour": 8,
    "StartTimeMinute": 30,
    "StartTimeAmPm": "PM",
    "DayOfWeekId": 5,
    "HourInterval": null,
    "TimeZoneId": "Eastern Standard Time",
    "NotifyRecipients": "test@my-email-address.com",
    "NotifySuccess": true,
    "NotifyFailure": true,
    "Inclusions": [
        {
            "FilePath": "C:\\backup_up_file.txt",
            "FileItemType": "File"
        },
        {
            "FilePath": "C:\\backed_up_folder",
            "FileItemType": "Folder"
        }
    ],
    "Exclusions": [
        {
            "FilePath": "C:\\backed_up_folder\\excluded_file.txt",
            "FileItemType": "File"
        }
    ]
}'  | python -m json.tool  
</programlisting>
            </example>
            <para>You can check to see if the configuration is updated by using the following cURL
                request specifying the same <code>BackupConfigurationId</code> that was used in the
                update request. </para>
            <programlisting language="bash">
curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/backup-configuration/<emphasis role="bold">yourBackupConfigurationId</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" | python -m
</programlisting>
        </section>
        <section xml:id="StartBackupManually-d1e01">
            <title>Start a backup manually</title>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">If you do not do anything,
                Cloud Backup runs the backup at the scheduled time.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">If you would like to run the
                backup once to be sure that it works, you can start the backup manually. Use your
                    <code>BackupConfigurationId</code> to indicate the backup configuration that you
                want to run.</para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-i</code> switch to send the HTTP response to
                terminal output and the <code>-X</code> switch to specify the correct HTTP
                method.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">This operation does not
                return a response body. An HTTP status code of 200 (OK) in the response indicates
                that the request succeeded.</para>
            <para>
                <example>
                    <title>Start a backup manually: cURL</title>
                    <programlisting>
curl -i -X POST https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/backup/action-request \
-H "X-Auth-Token: <emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAuthToken</emphasis>"  \
-H "Content-Type: application/json" \
-d '{   "Action" : "StartManual",    
        "Id": <emphasis role="bold">yourBackupConfigurationId</emphasis>
   }' </programlisting>
                    <para>The response comes from the server. The number at the end of the response
                        is the id of the job.</para>
                    <programlisting>
HTTP/1.1 200 OK 
... 
Date: Thu, 31 Jul 2014 16:54:38 GMT  


368785 
</programlisting>
                </example>
            </para>
        </section>
        <section xml:id="CheckingBackupStatus-d1e01"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Checking backup status</title>
            <para>Backup runs fast, though depending on the folder size it might take a while, so it
                is handy to be able to check status:</para>
            <para>You can check if your previous backup jobs ran properly, and if they did not, what
                the errors were.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 204 (No Content) in the response indicates that the storage
                data were successfully retrieved. The HTTP headers in the response indicate the
                number of containers in this storage account and the total bytes stored for the
                entire account.</para>
            <example>
                <title>Checking backup status: cURL</title>
                <programlisting language="bash">
curl -i -X HEAD https://storage101.ord1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" 


curl -s -H "Content-Type:
        application/json" -H "X-Auth-Token: $TOKEN"
        https://backup.api.rackspacecloud.com/v1.0/backup/2436516|python -m json.tool </programlisting>
                <programlisting>
{
    "BackupId": 134332,
    "BackupConfigurationId": 158519,
    "CurrentState": "Queued",
    "BackupConfigurationName": "Weekly Website Backup",
    "MachineAgentId": 224321,
    "MachineName": "Web Server",
    "StateChangeTime": "\/Date(1358530097000)\/",
    "IsEncrypted": false,
    "EncryptionKey": {
        "ModulusHex": "a3261939975948bb7a58dffe5ff54e65f0498f9 175f5a09288810b8975871e99af3b5dd94057b0fc07535f5f97444 504fa35169d461d0d30cf0192e307727c065168c788771c561a940 0fb49175e9e6aa4e23fe11af69e9412dd23b0cb6684c4c2429bce1 39e848ab26d0829073351f4acd36074eafd036a5eb83359d2a698d5",
        "ExponentHex": 20010
    }
}


  {  "BackupConfigurationId": 29831,
     "BackupConfigurationName": "Home Daily Backup v2",  
     "BackupId": 2436516,
     "CurrentState": "Completed",  
     "EncryptionKey": {      
          "ExponentHex": 10001,
          "ModulusHex": "D135386925ECB8706D458709AECAEA759C95CFC5DA5BF4FA8FFE53168346  },
     "IsEncrypted": false,  "MachineAgentId": 157512,  
     "MachineName": "dev02",
     "StateChangeTime": "/Date(1363731050000)/"  } 


</programlisting>
            </example>
        </section>
        <section xml:id="listCompletedBackupForAgent-d1e01"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>List activity for an agent</title>
            <para>I can also display all the activities for an agent so I can find if my backups ran
                successfully or failed. This is useful if I don't set e-mail notifications and want
                to create a report about state of previous backups.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 201 (Created) in the response indicates that the container
                was successfully CDN-enabled. </para>
            <para>When the container is CDN-enabled, the service returns its public URI in the
                    <code>X-Cdn-Uri</code> header of the response, and returns the SSL URI in the
                    <code>X-Cdn-Ssl-Uri</code> header of the response. You can combine the public
                URI with the object name to access the file through the CDN, or you can use the SSL
                URI with the object name to access the file over a secure SSL connection through the
                CDN.</para>
            <example>
                <title>List activity for an agent: cURL</title>
                <programlisting>
curl -i -X GET  https: //dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/system/activity/<emphasis role="bold">yourAgentID</emphasis> /
-H "User-Agent :  controlpanel.drivesrvr.com" \
-H "Host:  dfw.backup.api.rackspacecloud.com" \
-H "Content-Type: application/json" \
-H "Content-Lenght: 0" \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>"



 $ curl -s -H "Content-Type:
        application/json" -H "X-Auth-Token: $TOKEN"
        https://backup.api.rackspacecloud.com/v1.0/system/activity/$AGENTID | python -m
        json.tool </programlisting>
                <programlisting>
[
     {
         "ID": 137987,
         "Type": "Backup",
         "ParentId": 162423,
         "DisplayName": "Weekly Website Backup",
         "IsBackupConfigurationDeleted": false,
         "SourceMachineAgentId": 232180,
         "SourceMachineName": "Web Server",
         "DestinationMachineAgentId": 0,
         "DestinationMachineName": "",
         "CurrentState": "Completed",
         "TimeOfActivity": "/Date(1359033934000)/"
     }
  ]



[
{       "CurrentState": "Completed",
        "DestinationMachineAgentId": 0,     
        "DestinationMachineName": "",     
        "DisplayName": "Home Daily Backup v2",     
        "ID": 2437160,     
        "IsBackupConfigurationDeleted": false,
        "ParentId": 29831,     
        "SourceMachineAgentId": 157512,     
        "SourceMachineName": "dev02",     
        "TimeOfActivity": "/Date(1363735732000)/",     
        "Type": "Backup" 
}, 
{
        "CurrentState": "Completed",     
        "DestinationMachineAgentId": 0,
        "DestinationMachineName": "",     
        "DisplayName": "Home Daily Backup v2",     
        "ID": 2436516,     
        "IsBackupConfigurationDeleted": false,     
        "ParentId": 29831,
        "SourceMachineAgentId": 157512,     
        "SourceMachineName": "dev02",
        "TimeOfActivity": "/Date(1363731050000)/",     
        "Type": "Backup" 
}, 
{
        "CurrentState": "Completed",     
        "DestinationMachineAgentId": 0,
        "DestinationMachineName": "",     
        "DisplayName": "Home Daily Backup v2",     
        "ID": 2436492,     
        "IsBackupConfigurationDeleted": false,     
        "ParentId": 29831,
        "SourceMachineAgentId": 157512,     
        "SourceMachineName": "dev02",
        "TimeOfActivity": "/Date(1363730828000)/",     
        "Type": "Backup" 
} 
]  </programlisting>
            </example>
        </section>
        <section xml:id="CreateRestoreConfiguration-d1e01">
            <title>Create restore configuration</title>
            <para>Now that you have a backup, you can restore it to a different location on your
                server. You can also restore it to a different server, or to the same folder on the
                same server. You must set <code>BackupMachineId</code>,
                    <code>DestinationMachineId</code>, and <code>DestinationPath</code> values
                properly. <code>BackupId</code> identifies which backup you want to restore. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 204 (No Content) in the response indicates that the
                container details were successfully retrieved. </para>
            <example>
                <title>Create restore configuration: cURL</title>
                <programlisting>
curl -i -X HEAD https://<emphasis role="bold">cdn1.clouddrive.com</emphasis>/v1/<emphasis role="bold">yourAccountID</emphasis>/restore /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" 


curl -s -X PUT https: //dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/restore /
-d '{ "BackupId": 2437160,
      "BackupMachineId": 157512, 
      "DestinationMachineId": 157512, 
      "DestinationPath": "/tmp/restored", 
      "OverwriteFiles": false }' 
-H "Content-Type: application/json" \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>  </programlisting>
                <programlisting>
{
    "RestoreId": 1394,
    "BackupId": 133599,
    "DestinationMachineId": 156751,
    "OverwriteFiles": false,
    "BackupConfigurationId": 6265,
    "BackupConfigurationName": "Restore_Backup",
    "BackupRestorePoint": "\/Date(1357151359000)\/",
    "BackupMachineId": 5,
    "BackupMachineName": "BALAJIMBP",
    "BackupFlavor": "RaxCloudServer",
    "DestinationMachineName": "BILLS-TEST-WIN",
    "DestinationPath": "C:\\FolderPathForRestore\\",
    "IsEncrypted": false,
    "EncryptedPassword": null,
    "PublicKey": {
        "ModulusHex": "CA759606B13DC5350A3FAE3F851C76F260DC CD1EFF2DB7510AE74E00B4B2B6025422757493B2EC09B2C71DF ACFF4901E4ADAA3C9F2E6BDE9392E80FEED6F1F81BFD1D3AD9F 9080646F46632C30A94275C85859C1EFCD21BF911F311841914 BC719B1397FD3B95BE7657495903936E3345E6F083922F37761 0CBB6EB67C62B719770B25C9AB17521C2AB51B75871ED5F04F9 65C5402443ABCD05EE5E4A5201641309B8BA1100A04C62210B2 900CDEAA40F6EBF267B73634E471DB1420FF67CE41940D8ED8F 4B6C199CF5D023B410C386C58037546D34102D245AF068E891B B80F1799DDC4C9C85C6FF73DA1E45AEC98792BCC1C2DE3AAD3F 92F50F1661A4FFDC1",
        "ExponentHex": 10001
    },
    "RestoreStateId": 0
}

{ 
"BackupConfigurationId": 29831,
"BackupConfigurationName": "Home Daily Backup v2", 
"BackupFlavor": "RaxCloudServer",
"BackupId": 2437160, 
"BackupMachineId": 157512, 
"BackupMachineName": "dev02",
"BackupRestorePoint": "/Date(1363735801000)/", 
"DestinationMachineId": 157512,
"DestinationMachineName": "dev02", 
"DestinationPath": "/tmp/restored",
"EncryptedPassword": null, 
"IsEncrypted": false, 
"OverwriteFiles": false,
"PublicKey": {     
    "ExponentHex": 10001,     
    "ModulusHex": "D135386925ECB8706D458709AECAEA759C95CF..." 
}, 
"RestoreId": 4939, 
"RestoreStateId": 0
} 
</programlisting>
            </example>
        </section>
        <section xml:id="RestoreBackup-d1e01">
            <title>Restore a backup</title>
            <para>You run a restore based on a restore configuration. Use the <code>RestoreId</code>
                that was returned in<xref linkend="restoreConfiguration-d1e01"/>. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token.</para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 204 (No Content) in the response indicates that the object
                was successfully queued to be purged. </para>
            <para>Because there are so many edge servers around the world, purging an object might
                take a long time. Be patient while waiting for the emailed response. </para>
            <example>
                <title>Restore a backup: cURL</title>
                <programlisting>
<command>curl</command> <option>-s</option> <option>-X</option> POST https: //dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/restore /action-requested \
  -H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
  -H "Content-Type: application/json" \
  -d '{"Action": "StartManual",     
       "Id": 4939  }' | python -m json.tool
     


 curl -s -X POST -d '{    "Action":
        "StartManual",    "Id": 4939  }' -H "Content-Type: application/json" -H
        "X-Auth-Token: $TOKEN"
        https://backup.api.rackspacecloud.com/v1.0/restore/action-requested  

</programlisting>
                <para>When the restore completes, you get an e-mail similar to the following
                    one:</para>
                <programlisting>
Rackspace Cloud Backup 
Status: Completed
Started: 20 Mar 2013 14:40 UTC 
Completed: 20 Mar 2013 14:40 UTC 
Destination: /tmp/restored
Files Restored: 14 (318 bytes) 
Errors Encountered: 0   
</programlisting>
            </example>
        </section>
        <section xml:id="getRestoreReport-d1e01">
            <title>Get a restore report</title>
            <para>You can request a restore report that provides informatin about the restore and
                lets you know if your restore ran successfully.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 202 (Accepted) in the response indicates that the request
                is accept for processing. </para>
            <example>
                <title>Get a restore report: cURL</title>
                <programlisting>
curl -i -X POST https://<emphasis role="bold">cdn1.clouddrive.com</emphasis>/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis> /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "<emphasis role="bold">X-CDN-Enabled: False"</emphasis>


curl -s -H GET https: //dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/restore/report/{restorId} \
-H "Content-Type: application/json" \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-d '{ 
"BackupConfigurationId": 29831, 
"BackupConfigurationName": "Home Daily Backup v2", 
"BackupReportId": 2437160, 
"CompletedTime": "/Date(1363790404000)/", 
"Diagnostics": "No errors", 
"Duration": "00:00:00",
"ErrorList": [], 
"NumBytesRestored": "318 bytes", 
"NumErrors": "0",
"NumFilesRestored": "14", 
"OriginatingComputerName": "dev02", 
"Reason": "Success", 
"RestoreDestination": "dev02", 
"RestoreDestinationMachineId": 157512,
"RestorePoint": "/Date(1363735801000)/", 
"StartTime": "/Date(1363790404000)/",
"State": "Completed" }'| python -m json.tool   </programlisting>
                <programlisting>
{
    "BackupConfigurationId":6270,
    "BackupConfigurationName":"Restore_Backup",
    "BackupReportId":133886,
    "RestorePoint":"\/Date(1357151359000)\/",
    "StartTime":"\/Date(1357226521000)\/",
    "CompletedTime":"\/Date(1357226535000)\/",
    "Duration":"00:00:14",
    "OriginatingComputerName":"sujala-test-centos",
    "State":"CompletedWithErrors",
    "NumFilesRestored":"35",
    "NumBytesRestored":"18 MB",
    "RestoreDestination":"BILLS-TEST-WIN",
    "RestoreDestinationMachineId":864,
    "NumErrors":"1",
    "Reason":"UnableToProcessSomeFiles",
    "Diagnostics":"Some files may not have been restored",
    "ErrorList":[
     
    ]
}
</programlisting>
            </example>
            <para>Cloud Backup reports success. You can see it on your server by checking the folder
                listings:  </para>
            <programlisting>$ ls -l /home/ 
drwx------ 2 myuser   myuser   4096 Mar 19 15:37 myuser 
drwx------ 2 test     test     4096 Mar 18 21:43 test  
$ ls -l /tmp/restored/home 
drwx------ 2 myuser   myuser   4096 Mar 19 15:37 myuser</programlisting>
        </section>
        <section xml:id="deleteBackupConfiguration-d1e01">
            <title>Delete backup configuration</title>
            <para>For the sake of this demonstration, I will delete the backup configuration file
                and then verify if it was really removed:</para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 202 (Accepted) in the response indicates that the request
                is accept for processing. </para>
            <example>
                <title>Delete backup configuration: cURL</title>
                <programlisting>
curl -i -X POST https://<emphasis role="bold">cdn1.clouddrive.com</emphasis>/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis> /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "<emphasis role="bold">X-CDN-Enabled: False"</emphasis>


 $ curl -i -X DELETE -H "X-Auth-Token:
        $TOKEN"  https://backup.api.rackspacecloud.com/v1.0/backup-configuration/29831
     </programlisting>
                <programlisting>
 $ curl -s -H "X-Auth-Token: $TOKEN"
        https://backup.api.rackspacecloud.com/v1.0/backup-configuration/29831 | python -m json.tool
{ 
"BackupConfigurationId": 29831, 
"BackupConfigurationName": "Home Daily Backup v2",
        ..... 
"IsDeleted": true,
 .... 
} 
</programlisting>
            </example>
        </section>
    </chapter>
    <chapter xml:id="additionalResources-d1e01">
        <title>Additional resources</title>
        <para>For information about all Cloud Backup API operations, see the <citetitle>Cloud Backup
                Developer Guide</citetitle> at <link xlink:href="http://docs.rackspace.com/"
                >http://docs.rackspace.com/</link>. All you need to get started with the Cloud
            Backup API is in this getting started guide, the developer guide, and your Rackspace
            Cloud account. </para>
        <para>For additional information about Cloud Backup, see <link
                xlink:href="http://www.rackspace.com/knowledge_center/product-page/cloud-backup">the
                Knowledge Center</link>, and especially, the Knowledge Center article <link
                xlink:href="http://www.rackspace.com/knowledge_center/article/best-practices-for-cloud-backup"
                >Best Practices for Cloud Backup</link>. </para>
        <para>The official support channels (phone, chat, email, forums, and knowledge base
            articles) for Cloud Backup are available through the Rackspace Cloud web site at <link
                xlink:href="http://www.rackspace.com/cloud/backup/"
                >http://www.rackspace.com/cloud/backup/</link>. Rackspace welcomes feedback,
            comments, and bug reports at <link xlink:href="mailto:support@rackspacecloud.com"
                >support@rackspacecloud.com</link>.</para>
        <para> The system status page at <link
                xlink:href="http://status.rackspacecloud.com/cloudbackup/"
                >http://status.rackspacecloud.com/cloudbackup/</link> can be reviewed if you believe
            the Cloud Backup system is not functioning to your expectations. This page is updated to
            reflect up-to-date information about the system’s current health and status. </para>
        <para>Visit the <link
                xlink:href="http://feedback.rackspacecloud.com/forums/71021-product-feedback/"
                >Product Feedback Forum</link> and tell us what you think about Cloud Backup.</para>
        <para>You can follow Rackspace updates and announcements via Twitter at <link
                xlink:href="http://www.twitter.com/rackspace"
                >http://www.twitter.com/rackspace</link>. </para>
        <para>This API uses standard HTTP 1.1 response codes as documented at <link
                xlink:href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                >www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</link>. </para>
       
    </chapter>
    <glossary xml:id="glossary_1" xmlns:wadl="http://wadl.dev.java.net/2009/02"
        xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
        <title>Glossary</title>
        <glossentry xml:id="agent-d1e01">
            <glossterm>Agent</glossterm>
            <glossdef>
                <para>The application that is installed on the server that knows how to perform
                    backups and restores.</para>
            </glossdef>
        </glossentry>
        <glossentry xml:id="backup-d1e01">
            <glossterm>Backup</glossterm>
            <glossdef>
                <para>A group of folders,  files, or both stored on Cloud Backup for a particular
                    server and configuration.</para>
            </glossdef>
        </glossentry>
        <glossentry xml:id="backupConfiguration-d1e01">
            <glossterm>Backup configuration</glossterm>
            <glossdef>
                <para>The definition of what is going to be backed up and when.</para>
            </glossdef>
        </glossentry>
        <glossentry xml:id="restore-d1e01">
            <glossterm>Restore</glossterm>
            <glossdef>
                <para>The process of bringing your system back to a previously saved state.</para>
            </glossdef>
        </glossentry>
        <glossentry xml:id="restoreConfiguration-d1e01">
            <glossterm>Restore configuration</glossterm>
            <glossdef>
                <para>The definition of what is going to be restored and where.</para>
            </glossdef>
        </glossentry>
    </glossary>
</book>
