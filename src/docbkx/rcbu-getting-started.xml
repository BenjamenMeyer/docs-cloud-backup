<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book [
<!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash "&#x2013;">
        <!ENTITY mdash "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- Authentication endpoints -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">

        <!-- Useful for specs -->
        <!ENTITY MIGHT '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MIGHT</emphasis>'>
        <!ENTITY SHOULD '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">SHOULD</emphasis>'>
        <!ENTITY MUST '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST</emphasis>'>
        <!ENTITY MUST_NOT '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST NOT</emphasis>'>

        <!ENTITY CHECK '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Check_mark_23x20_02.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>

        <!ENTITY ARROW '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Arrow_east.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>
]>

<book version="5.0" 
    xmlns="http://docbook.org/ns/docbook" 
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" 
    xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:m="http://www.w3.org/1998/Math/MathML" 
    xmlns:html="http://www.w3.org/1999/xhtml"
    xml:id="rcbu-getting-started">
    
    <?rax title.font.size="40px" subtitle.font.size="30px"?>
    <title>Rackspace Cloud Backup Getting Started Guide</title>
    <?rax status.bar.text.font.size="40px"
          status.bar.text=""?>
    <titleabbrev>Rackspace Cloud Backup Getting Started Guide</titleabbrev>
    
    <info>
        <copyright>
            <year>2014</year>
            <year>2015</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>API v1.0</releaseinfo>
        <productname>Rackspace Cloud Backup</productname>
        <pubdate>2015-03-18</pubdate>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the doc build process.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for software developers interested in developing
                applications using the Rackspace Cloud Backup Application Programming Interface
                    (<abbrev>API</abbrev>). </para>
        </abstract>
        <revhistory>
            <revision>
                <date>2015-03-18</date>
                <revdescription>
                    <para>Corrected the cURL example in <xref linkend="startBackupManually-d1e01"/>
                        by changing<code> action-request</code> to <code>action-requested</code> at
                        the end of the endpoint.</para>
                </revdescription>
            </revision>
            <revision>
                <date>2015-03-04</date>
                <revdescription>
                    <para>Removed the London endpoint, since Rackspace now has one global endpoint
                        for authentication using the Rackspace Cloud Identity service. See <xref
                            linkend="generateAuthenticationToken-d1e01"/>.</para>
                </revdescription>
            </revision>
            <revision>
                <date>2015-01-14</date>
                <revdescription>
                    <para xmlns:wadl="http://wadl.dev.java.net/2009/02"
                        xmlns:m="http://www.w3.org/the key 1998/Math/MathML">Added a note that
                        includes a link to additional authentication methods, including multi-factor
                        authentication, in <xref linkend="generateAuthenticationToken-d1e01"
                        />.</para>
                </revdescription>
            </revision>
            <revision>
                <date>2014-08-12</date>
                <revdescription>
                    <para>Initial publishing of this guide.</para>
                </revdescription>
            </revision>
        </revhistory>
        <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
            <raxm:displayname>Getting Started Guide</raxm:displayname>
            <raxm:product version="v1.0">rcbu</raxm:product>
            <raxm:priority>10</raxm:priority>
        </raxm:metadata>
    </info>
    
    <chapter xml:id="Overview-d1e01" >
        <title>Overview</title>
        <para>The Rackspace Cloud Backup service enables you to select and back up specific files
            and folders from your cloud server. You can schedule any number of backup jobs and
            restore to the same system or a different one, which gives you the flexibility and power
            to work with your schedule and your data. </para>
        <para>Using the Cloud Backup RESTful API, you can automate backup jobs while provisioning
            new servers. Merged into a Chef cookbook or in any other automation system, backups are
            a part of the deployment rather than something to consider and handle later. </para>
        <para>Key features are as follows:</para>
        <itemizedlist>
            <listitem>
                <para>Select the files and folders from your server that you want to back up.</para>
            </listitem>
            <listitem>
                <para>Run your backups manually or on a schedule that works for you.</para>
            </listitem>
            <listitem>
                <para>See the activity from all your backups, both current and previous.</para>
            </listitem>
            <listitem>
                <para>Use AES-256 encryption with a private encryption key known only to you.</para>
            </listitem>
            <listitem>
                <para>Restore individual files and folders from a particular date.</para>
            </listitem>
            <listitem>
                <para>Save space with incremental backups that save only the changed portions of
                    files.</para>
            </listitem>
            <listitem>
                <para>Create an unlimited number of backups.</para>
            </listitem>
        </itemizedlist>
        <note xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <para>Cloud Backup does not take snapshots of your server. To read more about how Cloud
                Backup differs from snapshots, see <link
                    xlink:href="  http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-vs-cloud-server-image-backups"
                    > "Rackspace Cloud Backup vs. Cloud Server Image Backups"</link> in the
                Rackspace Knowledge Center. </para>
        </note>
        <para>Follow the steps provided in this guide to use the Cloud Backup API to create backups
            and use them to restore your files and folders. </para>
        <para>The simple exercises in this guide help you get started with the API by using cURL
            commands. With cURL, you send HTTP requests with embedded API calls from the command
            line. The cURL examples in this guide include request and response bodies in JSON
            format. For more information about cURL, see <xref linkend="usingCurl-d1e01"/>.</para>

<para>To use the API, it helps to be familiar with HTTP 1.1, RESTful web services, and JSON
            data serialization format.</para>
        <para>You can find details about the Cloud Backup API in the <emphasis role="italic"
                >Rackspace Cloud Backup Developer Guide</emphasis> at <link
                xlink:href="http://docs.rackspace.com/">http://docs.rackspace.com/</link>.</para>
        <para>For more details about Cloud Backup, go to <link
                xlink:href="http://www.rackspace.com/cloud/backup/"
                >http://www.rackspace.com/cloud/backup/</link>. This site also offers links to
            Rackspace official support channels, including phone, chat, and email, as well as
            Knowledge Center articles.</para>
        <section xml:id="prerequisitesForRunningExamples-d1e01">
            <title>Prerequisites for running examples</title>
            <para>To run the examples in this guide, you must have the following prerequisites:
                    <itemizedlist spacing="compact">
                    <listitem>
                        <para>Rackspace Cloud account</para>
                        <para>To sign up for a Rackspace Cloud account, go to the <link
                                xlink:href="https://cart.rackspace.com/cloud/"
                                xmlns:m="http://www.w3.org/the key 1998/Math/MathML">signup
                                page</link>.</para>
                    </listitem>
                    <listitem>
                        <para>Rackspace Cloud user name and password, as specified during
                            registration</para>
                    </listitem>
                </itemizedlist></para>
            <para>You also need to know your API key. To find your API key, use the following
                steps:</para>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Log in to the Cloud Control Panel (<link
                                xlink:href="https://mycloud.rackspace.com"
                                >https://mycloud.rackspace.com</link>).</para>
                    </listitem>
                    <listitem>
                        <para>On the upper-right side of the top navigation pane, click your
                            username.</para>
                    </listitem>
                    <listitem>
                        <para>From the menu, select <guilabel>Account Settings</guilabel>.</para>
                    </listitem>
                    <listitem>
                        <para>In the Login Details section of the Account Settings page, locate the
                                <guilabel>API Key</guilabel> field and click
                                <guibutton>Show</guibutton>.</para>
                    </listitem>
                    <listitem>
                        <para>Copy the value of the API key and paste it into a text editor of your
                            choice.</para>
                    </listitem>
                    <listitem>
                        <para>Click <guibutton>Hide</guibutton> to hide the value of the API
                            key.</para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section xml:id="pricingAndServiceLevel-d1e01">
            <title>Pricing and service level</title>
            <para>Cloud Backup is part of the Rackspace Cloud and your use of the Cloud Backup API
                is billed according to the pricing schedule at <link
                    xlink:href="http://www.rackspace.com/cloud/backup/pricing/"
                    >http://www.rackspace.com/cloud/backup/pricing/</link>.</para>
            <para xmlns:wadl="http://wadl.dev.java.net/2009/02">While Cloud Backup does not provide
                a service level agreement (SLA), applicable SLAs for the underlying infrastructure,
                such as Cloud Files, apply.</para>
        </section>
    </chapter>
   
    <chapter xml:id="sendRequestsToAPI-d1e01">
        <title>Send requests to the API</title>
        <para>You have several options for sending requests through an API: </para>
        <itemizedlist>
            <listitem>
                <para>Developers and testers might prefer to use cURL, the command-line tool from
                        <link xlink:href="http://curl.haxx.se/">http://curl.haxx.se/</link>.</para>
                <para>With cURL, you can send HTTP requests and receive responses back from the
                    command line. cURL is used in this guide. </para>
            </listitem>
            <listitem>
                <para>If you like to use a more graphical interface, the REST client for Mozilla
                    Firefox works well for testing and trying out commands. See <link
                        xlink:href="https://addons.mozilla.org/en-US/firefox/addon/restclient/"
                        >https://addons.mozilla.org/en-US/firefox/addon/restclient/</link>. </para>
            </listitem>
            <listitem>
                <para>You can download and install RESTClient, a Java application used to test
                    RESTful web services, from <link
                        xlink:href="http://code.google.com/p/rest-client/"
                        >http://code.google.com/p/rest-client/</link>. </para>
            </listitem>
        </itemizedlist>
        <section xml:id="usingCurl-d1e01">
            <title>Sending API requests by using cURL</title>
            <para>cURL is a command-line tool that is available in UNIX® system-based environments
                and Apple Mac OS X® systems, and can be downloaded for Microsoft Windows® to
                interact with REST interfaces. For more information about cURL, see <link
                    xlink:href="http://curl.haxx.se/">http://curl.haxx.se/</link>.</para>
            <para>cURL enables you to transmit and receive HTTP requests and responses from the
                command line or from within a shell script. As a result, you can work with the REST
                API directly without using one of the client APIs.</para>
            <para>The following cURL command-line options are used in this guide to run the
                examples.</para>
            <table rules="all">
                <caption>cURL command-line options</caption>
                <col width="25%"/>
                <col width="75%"/>
                <thead>
                    <tr>
                        <th>Option</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>-d</code></td>
                        <td>Sends the specified data in a <command>POST</command> request to the
                            HTTP server.</td>
                    </tr>
                    <tr>
                        <td><code>-i</code></td>
                        <td>Includes the HTTP header in the output.</td>
                    </tr>
                    <tr>
                        <td><code>-H HEADER</code></td>
                        <td>Specifies an HTTP header in the request. You can specify any number of
                            extra headers. Precede each header with the <code>-H</code> option. </td>
                    </tr>
                    <tr>
                        <td><code>-s</code></td>
                        <td>Specifies silent or quiet mode. No progress or error messages are shown.
                            If your cURL command is not generating any output, try replacing the
                                <code>-s</code> option with <code>-i</code>. </td>
                    </tr>
                    <tr>
                        <td><code>-X</code></td>
                        <td>Specifies the request operation to use when communicating with the HTTP
                            server. The specified request is used instead of the default operation,
                            which is <command>GET</command>. For example, <code>-X PUT</code>
                            specifies to use the <command>PUT</command> operation.</td>
                    </tr>
                </tbody>
            </table>
            <note>
                <para>If you have the tools, you can run the cURL JSON request examples with the
                    following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                        request example> | python -m json.tool</command>.</para>
            </note>
        </section>
        <section xml:id="copyPastCurl-d1e01">
            <title>Copying and pasting cURL request examples into a terminal window</title>
            <para>To run the cURL request examples shown in this guide, perform the following
                actions:</para>
            <orderedlist>
                <listitem>
                    <para>Copy each example from the HTML version of this guide and paste it into an
                        ASCII text editor (for example, vi or TextEdit). You can click on the small
                        document icon to the right of each request example to select it.</para>
                </listitem>
                <listitem>
                    <para>Modify each example with your required account information and other
                        information, as detailed in this guide.</para>
                    <note>
                        <para>The carriage returns in the cURL request examples are escaped with a
                            backslash (\) character. The escape character allows continuation of the
                            command across multiple lines. However, do not include the escape
                            character in the JSON or XML request body within the cURL
                            command.</para>
                    </note>
                </listitem>
                <listitem>
                    <para>After you are finished modifying the text for the cURL request example
                        with your information (for example, user name and API key), copy and paste
                        the text into your terminal window.</para>
                </listitem>
                <listitem>
                    <para>Press <keycombo>
                            <keycap>Enter</keycap>
                        </keycombo> to run the cURL command.</para>
                </listitem>
            </orderedlist>
            <para>Consider the following example cURL authentication request, which is described in
                detail in <xref linkend="generateAuthenticationToken-d1e01"/>.</para> 
            <example>
                <title> Example cURL authentication request</title>
                <?dbfo keep-together="always"?>
                <screen language="bash"><command>curl</command> <option>-s</option> <option>-X</option> POST https://identity.api.rackspacecloud.com/v2.0/tokens \
  -H "Content-Type: application/json" \
  -d '{
    "auth": {
      "RAX-KSKEY:apiKeyCredentials": {
        "username": "<emphasis role="bold">yourUserName</emphasis>",
        "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"
      }
    }
  }' | python -m json.tool </screen>
            </example>
            <para>You can see that the lines that are part of the cURL command syntax have all been
                escaped with a backslash (\) to indicate that the command continues on the next
                line:</para>
            <screen language="bash"><command>curl</command> <option>-s</option> <option>-X</option> POST https://identity.api.rackspacecloud.com/v2.0/tokens \
  -H "Content-Type: application/json" \
  -d '{
   
(... lines within the JSON portion of the message are not shown in this example)
(... the example shows only lines that are part of cURL syntax)     
     

   
 }' | python -m json.tool </screen>
            <para>However, the lines <emphasis role="italic">within</emphasis> the JSON portion of
                the message are not escaped with a backslash, to avoid issues with the JSON
                processing. </para>
            <screen language="bash">'{
    "auth": {
      "RAX-KSKEY:apiKeyCredentials": {
        "username": "<emphasis role="bold">yourUserName</emphasis>",
        "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"
      }
    }
  }'
</screen>
            <tip>
                <para>If you have trouble copying and pasting the examples as described, try typing
                    the entire example on one long line, removing all the backslash
                    line-continuation characters.</para>
            </tip>
        </section>
    </chapter>

    <chapter xml:id="serviceAccessEndpoints-d1e753">
        <title>Service access endpoints</title>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">The Cloud Backup service is a
            regionalized service. The user of the service is responsible for appropriate
            replication, caching, and overall maintenance of Cloud Backup data across regional
            boundaries to other Cloud Backup servers.</para>
       <para>The following table lists the service endpoints for Cloud Backup. </para>

            <para>To help you decide which regionalized endpoint to use, read about special
                considerations for choosing a data center in the Knowledge Center article at <link
                    xlink:href="http://www.rackspace.com/knowledge_center/article/about-regions"
                    >About Regions</link>.
            </para>
        
        <para>
            <table rules="all">
                <caption>Regionalized service endpoints</caption>
                <col width="27%"/>
                <col width="73%"/>
                <thead>
                    <tr>
                        <th>Region</th>
                        <th>Endpoint</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Dallas/Ft. Worth (DFW)</td>
                        <td><code>https://dfw.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code>
                        </td>
                    </tr>
                    <tr>
                        <td>Chicago (ORD)</td>
                        <td><code>https://ord.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code></td>
                    </tr>
                    <tr>
                        <td>London (LON) </td>
                        <td><code>https://lon.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code></td>
                    </tr>
                    <tr>
                        <td>Hong Kong (HKG)</td>
                        <td><code>https://hkg.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code></td>
                    </tr>
                    <tr>
                        <td>Northern Virginia (IAD)</td>
                        <td><code>https://iad.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code></td>
                    </tr>
                    <tr>
                        <td>Sydney (SYD)</td>
                        <td><code>https://syd.backup.api.rackspacecloud.com/v1.0/<parameter>123456</parameter>/</code></td>
                    </tr>
                </tbody>
            </table>
        </para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">Replace the sample account ID number
            (which is also called the tenant ID), <parameter>123456</parameter>, with your actual
            account number that is returned as part of the Cloud Identity service response.</para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">You will find the actual account number
            after the final slash  ('/') in the <code>publicURL</code> field returned by the
            authentication response.</para>
        <note xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <para>The Cloud Backup API runs with or without the specification of the account ID
                number in the endpoint. However, the examples in this guide include the account
                number in the request URIs.</para>
        </note>
    </chapter>
  
    <chapter xml:id="generateAuthenticationToken-d1e01">
        <title>Generate an authentication token</title>
        <para>Your first step must always be to generate an authentication token. You must then
            include the authentication token in each request, in the <code>X-Auth-Token</code>
            header. </para>
        <para>Remember to replace the placeholders in the following authentication request example
            with your information:<itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold">yourUserName</emphasis> &mdash;Your common Rackspace
                        Cloud user name, as supplied during registration</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">yourApiKey</emphasis> &mdash; Your API key </para>
                    <para>See <xref linkend="prerequisitesForRunningExamples-d1e01"/> for the steps
                        to use to find your API key. </para>
                </listitem>
            </itemizedlist></para>
        <note>
            <para>This guide uses <emphasis role="bold">yourUserName</emphasis> and <emphasis
                    role="bold">yourApiKey</emphasis> for authentication. For information about
                other supported authentication methods, see <link
                    xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Token_Calls.html"
                    >Authentication tokens</link> in the <citetitle>Cloud Identity Client Developer
                    Guide</citetitle>.</para>
        </note>
        <para>Use the following endpoint to access the Cloud Identity service for authentication,
            regardless of US or UK identities: </para>
        <itemizedlist spacing="compact">
            <listitem>
                <para><link xlink:href="&ENDPOINT-US-20;">&ENDPOINT-US-20;</link>
                </para>
            </listitem>
        </itemizedlist>
        <para>Your account may be based in either the US or the UK. This is not determined by your
            physical location but by the location of the Rackspace retail site that was used to
            create your account: </para>
        <itemizedlist spacing="compact">
            <listitem>
                <para>If your account was created via <link
                        xlink:href="http://www.rackspacecloud.com"
                        >http://www.rackspacecloud.com</link>, it is a US-based account. </para>
            </listitem>
            <listitem>
                <para>If your account was created via <link xlink:href="http://www.rackspace.co.uk"
                        >http://www.rackspace.co.uk</link>, it is a UK-based account. </para>
            </listitem>
        </itemizedlist>
        <para linkend="authenticationRequest">Notice in <xref linkend="authenticationRequest"/> that
            you authenticate using the URL for the Cloud Identity services
                <code>https://identity.api.rackspacecloud.com/v2.0/tokens</code>. The
                <code>v2.0</code> component in the URL indicates that you are using version 2.0 of
            the Cloud Identity API.</para>
        <para>The cURL request uses  the <code>-s</code> option for silent or quiet mode (no
            progress or error messages shown), the <code>-X</code> option to specify the request
            operation to use when communicating with the HTTP server (instead of using the default
            operation),  and the <code>-d</code> option to send the specified data in a
                <command>POST</command> request to the HTTP server.</para>
        <para>If you have the tools, you can run the cURL JSON request examples with the following
            option to format the output from cURL: <?sbr?><command>&lt;cURL JSON request example> |
                python -m json.tool</command>.</para>
        <example xml:id="authenticationRequest">
            <title>cURL authentication request: JSON</title>
            <?dbfo keep-together="always"?>
            <screen language="bash"><command>curl</command> <option>-s</option> <option>-X</option> POST https://identity.api.rackspacecloud.com/v2.0/tokens \
  -H "Content-Type: application/json" \
  -d '{
    "auth": {
      "RAX-KSKEY:apiKeyCredentials": {
        "username": "<emphasis role="bold">yourUserName</emphasis>",
        "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"
      }
    }
  }' | python -m json.tool</screen>
        </example>
        <para>An HTTP status code of 200 (OK) indicates that the authentication request completed
            successfully.</para>
        <para>In the authentication response, the authentication token <code>id</code> is returned
            near the bottom of the following example with an <code>expires</code> attribute that
            specifies when the token expires. Tokens are valid for a finite duration, typically for
            24 hours. Remember to supply your authentication token wherever you see the placeholder
                <emphasis role="bold">yourAuthToken</emphasis> in the examples in this guide.</para>
        <para>The <code>publicURL</code> endpoints for Cloud Backup (for example
                <code>https://dfw.backup.api.rackspacecloud.com/v1.0/123456</code>) are also
            returned in the authentication response. </para>
        <para>Your actual account number is after the final slash (/) in the <code>publicURL</code>
            field (for example <code>123456</code> in the preceding example endpoint). You must
            specify <emphasis role="italic">your</emphasis> account number in the Cloud Backup API
            request, wherever you see the placeholder <emphasis role="bold">yourAccountID</emphasis>
            specified in the examples in this guide.</para>
        <example>
            <title>Authentication response with partial service catalog showing Cloud Backup
                endpoints </title>
            <programlisting language="json"><xi:include href="../../src/docbkx/samples/auth-20-rcbu_gettingStartedGuide.json" parse="text"/></programlisting>
        </example>
        <para>After authentication, you can use cURL to perform the <command>GET</command>,
                <command>DELETE</command>, <command>PUT</command>, and <command>POST</command>
            requests for the Cloud Backup API.</para>
    </chapter>
    <chapter xml:id="createWorkWithBackups-d1e01">
        <title>Create and work with backups</title>
        <para>This chapter contains simple examples of some basic Cloud Backup requests that you
            will commonly use. Example requests are provided in cURL, followed by the response. </para>
        <para>For more information about all Cloud Backup operations, see the <emphasis
                role="italic">Rackspace Cloud Backup Developer Guide</emphasis>.</para>
        <section xml:id="listAllAgentsForTheUser-d1e01"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>List all agents for the user</title>
            <para>The agent is an important component of Cloud Backup. You must install the agent on
                all servers that you want to back up. Documentation about installing agents is
                available from the link on Rackspace Control Panel under the <emphasis role="bold"
                    >Backup</emphasis> tab or at <link
                    xlink:href="http://http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-install-the-agent-linux-0/"
                    >http://www.rackspace.com/knowledge_center/article/rackspace-cloud-backup-install-the-agent-linux-0</link>.
                After the agent is installed on one or many servers, you can use the Cloud Backup
                API to configure your backups.</para>
            <note>
                <para>If your account has the Managed Operations level of support, the Cloud Backup
                    agent might already be installed on your server. If your cloud servers are
                    listed under the <emphasis role="bold">Systems</emphasis> tab in the <emphasis
                        role="bold">Backup</emphasis> section of the Cloud Control Panel, then the
                    Cloud Backup agent is already installed. If it is not, Rackspace can install it
                    for you. Check with your account manager.</para>
            </note>
            <para>Assuming that you initially know nothing about the environment, in order to do
                anything with the backups, you need to list the agents. After you list them, you can
                choose the one you want to work with. <code>MachineAgentId</code> is what you need
                to work with the agent in other requests.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The cURL request uses  the
                    <code>-s</code> option for silent or quiet mode (no progress or error messages
                shown) and the <code>-X</code> option to specify the request operation to use when
                communicating with the HTTP server (instead of using the default operation).</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">If you have the tools, you can run
                the cURL JSON request examples with the following option to format the output from
                cURL: <?sbr?><command>&lt;cURL JSON request example> | python -m
                json.tool</command>.</para>
            <para>An HTTP status code of 200 (OK) indicates that the request succeeded.</para>
            <example>
                <title>List all agents for the user</title>
                <programlisting language="bash">curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/user/agents \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" | python -m json.tool</programlisting>
                <programlisting language="bash">[
    {
        "AgentVersion": "1.10.006176", 
        "Architecture": "64-bit", 
        "BackupContainer": "https://storage101.dfw1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/z_DO_NOT_DELETE_CloudBackup_v2_0_aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee", 
        "BackupDatacenter": "DFW", 
        "BackupVaultSize": null, 
        "CleanupAllowed": true, 
        "Datacenter": "DFW", 
        "Flavor": "RaxCloudServer", 
        "HostServerId": "79aa4aa1-cd86-4416-a6c4-6942b7083130", 
        "IPAddress": "162.209.73.233", 
        "IsDisabled": false, 
        "IsEncrypted": false, 
        "MachineAgentId": 202743, 
        "MachineName": "web2", 
        "OperatingSystem": "Windows Server 2008 R2", 
        "OperatingSystemVersion": "6.1", 
        "PublicKey": {
            "ExponentHex": 10001, 
            "ModulusHex": "C6054E90E32D2B25E16F3A560E1B4DC580B1E4AB74E0C66268 0DD8A1BD83956051F6A526B16C55225D1BE6E0B1265F4085FB2F61B61337F5D32198E5CAFFEA CD50E90517A329146E43B20194C082A9C890060AD07A542FBC035B2A96F9F212C6D94887BECB 5E15F3E55397B975B1896CFC66EBB5DD7D83587467A0E7F669ADB925A7BE4C1ECED1BC9E92DB 768CE76FDC86CCDD04BDF469679FE3261AA66C22AC6263E540B79780AAF09CFC798CDC4D1218 867388632EA4BD1BF511E4881E07C5387DDDBE741E615ACA0C32A738F5B952F1C17051EC3BAF 9F64C629515EA2AF93E6BB450A8B1B3E02963471679D5670AF93CFEA649172EDA7AC5E071E2D 3AF0BD"
        }, 
        "Status": "Unknown", 
        "TimeOfLastSuccessfulBackup": null, 
        "UseFailoverUri": false, 
        "UseServiceNet": true
    }
]
</programlisting>
            </example>
        </section>
        <section xml:id="listAgentDetails-d1e01"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>List agent details </title>
            <para>To check whether the agent is online, list the agent's details and check its
                status. If the agent is not online, Cloud Backup cannot run the backup job. Use
                    <code>MachineAgentId</code> from <xref linkend="listAgentDetails-d1e01"/> for
                    <emphasis role="bold">yourMachineAgentID</emphasis>.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The cURL request uses  the
                    <code>-s</code> option for silent or quiet mode (no progress or error messages
                shown) and the <code>-X</code> option to specify the request operation to use when
                communicating with the HTTP server (instead of using the default operation).</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">If you have the tools, you can run
                the cURL JSON request examples with the following option to format the output from
                cURL: <?sbr?><command>&lt;cURL JSON request example> | python -m
                json.tool</command>.</para>
            <para>An HTTP status code of 200 (OK) in the response indicates that the request
                succeeded.</para>
            <example>
                <title>List agent details</title>
                <programlisting language="bash">
curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/agent/<emphasis role="bold">yourMachineAgentID </emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" | python -m json.tool
</programlisting>
                <programlisting language="bash">
{
    "AgentVersion": "1.10.006176", 
    "Architecture": "64-bit", 
    "BackupContainer": "https://storage101.dfw1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/z_DO_NOT_DELETE_CloudBackup_v2_0_aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee", 
    "BackupDatacenter": "DFW", 
    "BackupVaultSize": "35.3 KB", 
    "CleanupAllowed": true, 
    "Datacenter": "DFW", 
    "Flavor": "RaxCloudServer", 
    "HostServerId": "79aa4aa1-cd86-4416-a6c4-6942b7083130", 
    "IPAddress": "162.209.73.233", 
    "IsDisabled": false, 
    "IsEncrypted": false, 
    "MachineAgentId": 202743, 
    "MachineName": "web2", 
    "OperatingSystem": "Windows Server 2008 R2", 
    "OperatingSystemVersion": "6.1", 
    "PublicKey": {
        "ExponentHex": 10001, 
        "ModulusHex": "C6054E90E32D2B25E16F3A560E1B4DC580B1E4AB74E0C66268 0DD8A1BD83956051F6A526B16C55225D1BE6E0B1265F4085FB2F61B61337F5D32198E5CAFFEA CD50E90517A329146E43B20194C082A9C890060AD07A542FBC035B2A96F9F212C6D94887BECB 5E15F3E55397B975B1896CFC66EBB5DD7D83587467A0E7F669ADB925A7BE4C1ECED1BC9E92DB 768CE76FDC86CCDD04BDF469679FE3261AA66C22AC6263E540B79780AAF09CFC798CDC4D1218 867388632EA4BD1BF511E4881E07C5387DDDBE741E615ACA0C32A738F5B952F1C17051EC3BAF 9F64C629515EA2AF93E6BB450A8B1B3E02963471679D5670AF93CFEA649172EDA7AC5E071E2D 3AF0BD"
    }, 
    "Status": "Online", 
    "TimeOfLastSuccessfulBackup": null, 
    "UseFailoverUri": false, 
    "UseServiceNet": true
}
</programlisting>
            </example>
        </section>
        <section xml:id="createBackupConfiguration-d1e01">
            <title>Create a backup configuration</title>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">Create a backup configuration
                in which you define the following basic items:<itemizedlist>
                    <listitem>
                        <para>The name of the backup</para>
                    </listitem>
                    <listitem>
                        <para>What you want to back up</para>
                    </listitem>
                    <listitem>
                        <para>When you want to back up</para>
                    </listitem>
                    <listitem>
                        <para>How often you want to back up</para>
                    </listitem>
                </itemizedlist></para>
            <para>Look carefully at the <code>Inclusions</code> and <code>Exclusions</code>
                sections. Note that each exclusion must be within a folder that is included. If you
                like, you can programmatically create many configuration files like this with small
                changes for each server that you create. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses  the <code>-s</code> option for silent or quiet mode (no
                progress or error messages shown) and the <code>-X</code> option to specify the
                request operation to use when communicating with the HTTP server (instead of using
                the default operation).</para>
            <para>If you have the tools, you can run the cURL JSON request examples with the
                following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                    request example> | python -m json.tool</command>.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the request succeeded.</para>
            <example>
                <title>Create a backup configuration</title>
                <programlisting language="bash">
curl -s -X POST https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/backup-configuration \
-H "X-Auth-Token: <emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" \
-d '{
    "MachineAgentId": 202743,
    "BackupConfigurationName": "Weekly Website Backup",
    "IsActive": true,
    "VersionRetention": 30,
    "MissedBackupActionId": 1,
    "Frequency": "Weekly",
    "StartTimeHour": 7,
    "StartTimeMinute": 30,
    "StartTimeAmPm": "PM",
    "DayOfWeekId": 5,
    "HourInterval": null,
    "TimeZoneId": "Eastern Standard Time",
    "NotifyRecipients": "test@my-email-address.com",
    "NotifySuccess": true,
    "NotifyFailure": true,
    "Inclusions": [
        {
            "FilePath": "C:\\backup_up_file.txt",
            "FileItemType": "File"
        },
        {
            "FilePath": "C:\\backed_up_folder",
            "FileItemType": "Folder"
        }
    ],
    "Exclusions": [
        {
            "FilePath": "C:\\backed_up_folder\\excluded_file.txt",
            "FileItemType": "File"
        }
    ]
}'  | python -m json.tool 
 </programlisting>
                <programlisting language="bash">
{
    "BackupConfigurationId": 174084, 
    "BackupConfigurationName": "Weekly Website Backup", 
    "BackupConfigurationScheduleId": 173131, 
    "BackupPostscript": "", 
    "BackupPrescript": "", 
    "Datacenter": "DFW", 
    "DayOfWeekId": 5, 
    "EncryptionKey": {
        "ExponentHex": 10001, 
        "ModulusHex": "C6054E90E32D2B25E16F3A560E1B4DC580B1E4AB74E0C66268 0DD8A1BD83956051F6A526B16C55225D1BE6E0B1265F4085FB2F61B61337F5D32198E5CAFFEA CD50E90517A329146E43B20194C082A9C890060AD07A542FBC035B2A96F9F212C6D94887BECB 5E15F3E55397B975B1896CFC66EBB5DD7D83587467A0E7F669ADB925A7BE4C1ECED1BC9E92DB 768CE76FDC86CCDD04BDF469679FE3261AA66C22AC6263E540B79780AAF09CFC798CDC4D1218 867388632EA4BD1BF511E4881E07C5387DDDBE741E615ACA0C32A738F5B952F1C17051EC3BAF 9F64C629515EA2AF93E6BB450A8B1B3E02963471679D5670AF93CFEA649172EDA7AC5E071E2D 3AF0BD"
    }, 
    "Exclusions": [
        {
            "FileId": 657293, 
            "FileItemType": "File", 
            "FilePath": "C:\\backed_up_folder\\excluded_file.txt", 
            "FilePathEncoded": null, 
            "Filter": "Exclude", 
            "ParentId": 174084
        }
    ], 
    "Flavor": "RaxCloudServer", 
    "Frequency": "Weekly", 
    "HourInterval": null, 
    "Inclusions": [
        {
            "FileId": 657291, 
            "FileItemType": "File", 
            "FilePath": "C:\\backup_up_file.txt", 
            "FilePathEncoded": null, 
            "Filter": "Include", 
            "ParentId": 174084
        }, 
        {
            "FileId": 657292, 
            "FileItemType": "Folder", 
            "FilePath": "C:\\backed_up_folder", 
            "FilePathEncoded": null, 
            "Filter": "Include", 
            "ParentId": 174084
        }
    ], 
    "IsActive": true, 
    "IsDeleted": false, 
    "IsEncrypted": false, 
    "LastRunBackupReportId": null, 
    "LastRunTime": null, 
    "MachineAgentId": 202743, 
    "MachineName": "web2", 
    "MissedBackupActionId": 1, 
    "NextScheduledRunTime": "/Date(1406935800000)/", 
    "NotifyFailure": true, 
    "NotifyRecipients": "test@my-email-address.com", 
    "NotifySuccess": true, 
    "StartTimeAmPm": "PM", 
    "StartTimeHour": 11, 
    "StartTimeMinute": 30, 
    "TimeZoneId": "Eastern Standard Time", 
    "VersionRetention": 30
}
</programlisting>
            </example>
        </section>
        <section xml:id="listCurrentBackupConfigurations-d1e01">
            <title>List all backup configurations for an agent</title>
            <para>To verify that your backup configuration exists, you can list all of the backup
                configurations for your agent. The output is similar to that in <xref
                    linkend="createBackupConfiguration-d1e01"/>. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses  the <code>-s</code> option for silent or quiet mode (no
                progress or error messages shown) and the <code>-X</code> option to specify the
                request operation to use when communicating with the HTTP server (instead of using
                the default operation).</para>
            <para>If you have the tools, you can run the cURL JSON request examples with the
                following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                    request example> | python -m json.tool</command>.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the request succeeded.</para>
            <example>
                <title>List all backup configurations for an agent</title>
                <programlisting language="bash">
curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/backup-configuration/system/<emphasis role="bold">youMachineAgentID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" | python -m json.tool
</programlisting>
                <programlisting language="bash">
[   
    {
        "BackupConfigurationId": 174084, 
        "BackupConfigurationName": "Weekly Website Backup", 
        "BackupConfigurationScheduleId": 173131, 
        "BackupPostscript": "", 
        "BackupPrescript": "", 
        "Datacenter": "DFW", 
        "DayOfWeekId": 5, 
        "EncryptionKey": {
            "ExponentHex": 10001, 
            "ModulusHex": "C6054E90E32D2B25E16F3A560E1B4DC580B1E4AB74E0C66268 0DD8A1BD83956051F6A526B16C55225D1BE6E0B1265F4085FB2F61B61337F5D32198E5CAFFEA CD50E90517A329146E43B20194C082A9C890060AD07A542FBC035B2A96F9F212C6D94887BECB 5E15F3E55397B975B1896CFC66EBB5DD7D83587467A0E7F669ADB925A7BE4C1ECED1BC9E92DB 768CE76FDC86CCDD04BDF469679FE3261AA66C22AC6263E540B79780AAF09CFC798CDC4D1218 867388632EA4BD1BF511E4881E07C5387DDDBE741E615ACA0C32A738F5B952F1C17051EC3BAF 9F64C629515EA2AF93E6BB450A8B1B3E02963471679D5670AF93CFEA649172EDA7AC5E071E2D 3AF0BD"
        }, 
        "Exclusions": [
            {
                "FileId": 657293, 
                "FileItemType": "File", 
                "FilePath": "C:\\backed_up_folder\\excluded_file.txt", 
                "FilePathEncoded": null, 
                "Filter": "Exclude", 
                "ParentId": 174084
            }
        ], 
        "Flavor": "RaxCloudServer", 
        "Frequency": "Weekly", 
        "HourInterval": null, 
        "Inclusions": [
            {
                "FileId": 657291, 
                "FileItemType": "File", 
                "FilePath": "C:\\backup_up_file.txt", 
                "FilePathEncoded": null, 
                "Filter": "Include", 
                "ParentId": 174084
            }, 
            {
                "FileId": 657292, 
                "FileItemType": "Folder", 
                "FilePath": "C:\\backed_up_folder", 
                "FilePathEncoded": null, 
                "Filter": "Include", 
                "ParentId": 174084
            }
        ], 
        "IsActive": true, 
        "IsDeleted": false, 
        "IsEncrypted": false, 
        "LastRunBackupReportId": null, 
        "LastRunTime": null, 
        "MachineAgentId": 202743, 
        "MachineName": "web2", 
        "MissedBackupActionId": 1, 
        "NextScheduledRunTime": "/Date(1406935800000)/", 
        "NotifyFailure": true, 
        "NotifyRecipients": "test@my-email-address.com", 
        "NotifySuccess": true, 
        "StartTimeAmPm": "PM", 
        "StartTimeHour": 11, 
        "StartTimeMinute": 30, 
        "TimeZoneId": "Eastern Standard Time", 
        "VersionRetention": 30
    }
]

</programlisting>
            </example>
        </section>
        <section xml:id="updateTheConfiguration-d1e01">
            <title>Update a backup configuration</title>
            <para>To schedule the backup for one hour later, for example, you can update the backup
                configuration that you created earlier. Specify the
                    <code>BackupConfigurationId</code> value in the URI. Send the same JSON content
                that you used in <xref linkend="createBackupConfiguration-d1e01"/> but make the
                following changes: <itemizedlist>
                    <listitem>
                        <para>Add <code>v2</code> to <code>BackupConfigurationName</code>.</para>
                    </listitem>
                    <listitem>
                        <para>Change <code>StartTimeHour</code> to <code>8</code>. </para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses  the <code>-s</code> option for silent or quiet mode (no
                progress or error messages shown) and the <code>-X</code> option to specify the
                request operation to use when communicating with the HTTP server (instead of using
                the default operation).</para>
            <para>If you have the tools, you can run the cURL JSON request examples with the
                following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                    request example> | python -m json.tool</command>.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">This operation does not
                return a response body. An HTTP status code of 200 (OK) in the response indicates
                that the request succeeded.</para>
            <example>
                <title>Update a backup configuration</title>
                <programlisting language="bash">
curl -i -X PUT https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/backup-configuration/<emphasis role="bold">yourBackupConfigurationID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" \
-d '{
    "MachineAgentId": 202743,
    "BackupConfigurationName": "Weekly Website Backup v2",
    "IsActive": true,
    "VersionRetention": 30,
    "MissedBackupActionId": 1,
    "Frequency": "Weekly",
    "StartTimeHour": 8,
    "StartTimeMinute": 30,
    "StartTimeAmPm": "PM",
    "DayOfWeekId": 5,
    "HourInterval": null,
    "TimeZoneId": "Eastern Standard Time",
    "NotifyRecipients": "test@my-email-address.com",
    "NotifySuccess": true,
    "NotifyFailure": true,
    "Inclusions": [
        {
            "FilePath": "C:\\backup_up_file.txt",
            "FileItemType": "File"
        },
        {
            "FilePath": "C:\\backed_up_folder",
            "FileItemType": "Folder"
        }
    ],
    "Exclusions": [
        {
            "FilePath": "C:\\backed_up_folder\\excluded_file.txt",
            "FileItemType": "File"
        }
    ]
}'  | python -m json.tool  
</programlisting>
            </example>
            <para>You can verify that the configuration is updated by using the following cURL
                request, specifying the same <code>BackupConfigurationId</code> that you used in the
                update request. </para>
            <programlisting language="bash">
curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/backup-configuration/<emphasis role="bold">yourBackupConfigurationID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" | python -m
</programlisting>
        </section>
        <section xml:id="startBackupManually-d1e01">
            <title>Start a backup manually</title>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">If you do not do anything,
                Cloud Backup runs the backup at the scheduled time.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">If you want to run the backup
                once to ensure that it works, you can start the backup manually. Use the
                    <code>BackupConfigurationId</code> to indicate the backup configuration that you
                want to run. You can run the backup job as many time as you like. A backup is
                created each time you run the job. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-i</code> option to send the HTTP response to
                terminal output and the <code>-X</code> option to specify the correct HTTP
                method.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">This operation does not
                return a response body. An HTTP status code of 200 (OK) in the response indicates
                that the request succeeded.</para>
            <para>
                <example>
                    <title>Start a backup manually</title>
                    <programlisting language="bash">
curl -i -X POST https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/backup/action-requested \
-H "X-Auth-Token: <emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAuthToken</emphasis>"  \
-H "Content-Type: application/json" \
-d '{   "Action" : "StartManual",    
        "Id": <emphasis role="bold">yourBackupConfigurationId</emphasis>
   }' </programlisting>
                    <para>The response comes from the server. The number at the end of the response
                        is the ID of the job.</para>
                    <programlisting language="bash">
HTTP/1.1 200 OK 
... 
Date: Thu, 31 Jul 2014 16:54:38 GMT  


368785 
</programlisting>
                </example>
            </para>
            <para>When the backup is done, you receive an email about the status, as shown in the
                following example. Receiving the email is based on the
                <code>NotifyRecipients</code>, <code>NotifySuccess</code>, and
                    <code>NotifyFailure</code> parameters that you specify when you create your
                backup configuration (see <xref linkend="createBackupConfiguration-d1e01"/>). </para>
            <programlisting language="bash" >
Rackspace Cloud Backup 
Backed Up: Weekly Website Backup v2 on web2 
Status: Completed 
Started: 31 Jul 2014 16:54 UTC 
Completed: 31 Jul 2014 16:54 UTC 
Source: web02 
Files Searched: 2 (4 KB) 
Errors Encountered: 0 </programlisting>
        </section>
        <section xml:id="checkingBackupStatus-d1e01"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Checking backup status</title>
            <para>You can verify whether your backup jobs ran properly, and if they did not, what
                errors occurred.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The cURL request uses the
                    <code>-s</code> option for silent or quiet mode (no progress or error messages
                shown) and the <code>-X</code> option to specify the request operation to use when
                communicating with the HTTP server (instead of using the default operation).</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">If you have the tools, you can run
                the cURL JSON request examples with the following option to format the output from
                cURL: <?sbr?><command>&lt;cURL JSON request example> | python -m
                json.tool</command>.</para>
            <para>The following example output shows <code>"CurrentState": "Queued"</code>. Other
                valid values for <code>CurrentState</code> are as follows: <itemizedlist>
                    <listitem>
                        <para><code>Completed</code></para>
                    </listitem>
                    <listitem>
                        <para><code>CompletedWithErrors</code></para>
                    </listitem>
                    <listitem>
                        <para><code>Failed</code></para>
                    </listitem>
                    <listitem>
                        <para><code>InProgress</code></para>
                    </listitem>
                    <listitem>
                        <para><code>Missed</code></para>
                    </listitem>
                    <listitem>
                        <para><code>Preparing</code></para>
                    </listitem>
                    <listitem>
                        <para><code>Skipped</code></para>
                    </listitem>
                    <listitem>
                        <para><code>StartRequested</code></para>
                    </listitem>
                    <listitem>
                        <para><code>StartScheduled</code></para>
                    </listitem>
                    <listitem>
                        <para><code>Stopped</code></para>
                    </listitem>
                    <listitem>
                        <para><code>StopRequested</code></para>
                    </listitem>
                </itemizedlist></para>
            <para>An HTTP status code of 200 (OK) in the response indicates that the request
                succeeded.</para>
            <example>
                <title>Checking backup status</title>
                <programlisting language="bash">
curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/backup/<emphasis role="bold">yourBackupID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json | python -m json.tool
</programlisting>
                <programlisting language="bash">
{
    "BackupId": 368785,
    "BackupConfigurationId": 174084,
    "CurrentState": "Queued",
    "BackupConfigurationName": "Weekly Website Backup v2",
    "MachineAgentId": 202743,
    "MachineName": "web2",
    "StateChangeTime": "/Date(1406935800000)/",
    "IsEncrypted": false,
    "EncryptionKey": {
        "ExponentHex": 10001, 
        "ModulusHex": "C6054E90E32D2B25E16F3A560E1B4DC580B1E4AB74E0C66268 0DD8A1BD83956051F6A526B16C55225D1BE6E0B1265F4085FB2F61B61337F5D32198E5CAFFEA CD50E90517A329146E43B20194C082A9C890060AD07A542FBC035B2A96F9F212C6D94887BECB 5E15F3E55397B975B1896CFC66EBB5DD7D83587467A0E7F669ADB925A7BE4C1ECED1BC9E92DB 768CE76FDC86CCDD04BDF469679FE3261AA66C22AC6263E540B79780AAF09CFC798CDC4D1218 867388632EA4BD1BF511E4881E07C5387DDDBE741E615ACA0C32A738F5B952F1C17051EC3BAF 9F64C629515EA2AF93E6BB450A8B1B3E02963471679D5670AF93CFEA649172EDA7AC5E071E2D 3AF0BD"
    }
}
</programlisting>
            </example>
        </section>
        <section xml:id="listCompletedBackupForAgent-d1e01"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>List activity for an agent</title>
            <para>You can display all the activities for an agent to find out whether your backups
                ran successfully or failed. This operation is useful if you do not set email
                notifications when you create your backup configuration (see <xref
                    linkend="backupConfiguration-d1e01"/>) and want to create a report about the
                state of previous backups. The operation lists all in-progress and completed
                activity for an agent. Activity types are <code>Backup</code>, <code>Cleanup</code>,
                and <code>Restore</code>. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The cURL request uses the
                    <code>-s</code> option for silent or quiet mode (no progress or error messages
                shown) and the <code>-X</code> option to specify the request operation to use when
                communicating with the HTTP server (instead of using the default operation).</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">If you have the tools, you can run
                the cURL JSON request examples with the following option to format the output from
                cURL: <?sbr?><command>&lt;cURL JSON request example> | python -m
                json.tool</command>.</para>
            <para>An HTTP status code of 200 (OK) in the response indicates that the request
                succeeded.</para>
            <example>
                <title>List activity for an agent</title>
                <programlisting language="bash">
curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/system/activity/<emphasis role="bold">yourAgentID</emphasis> /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" | python -m json.tool
</programlisting>
                <programlisting language="bash">
[
    {
        "CurrentState": "Completed", 
        "DestinationDatacenter": "", 
        "DestinationMachineAgentId": 0, 
        "DestinationMachineName": "", 
        "DisplayName": "Cleanup", 
        "ID": 317083, 
        "IsBackupConfigurationDeleted": false, 
        "ParentId": 0, 
        "SourceDatacenter": "DFW", 
        "SourceMachineAgentId": 202743, 
        "SourceMachineName": "web2", 
        "TimeOfActivity": "/Date(1375816993000)/", 
        "Type": "Cleanup"
    }, 
    {
        "CurrentState": "Completed", 
        "DestinationDatacenter": "", 
        "DestinationMachineAgentId": 0, 
        "DestinationMachineName": "", 
        "DisplayName": "Web2", 
        "ID": 5000325, 
        "IsBackupConfigurationDeleted": true, 
        "ParentId": 54020, 
        "SourceDatacenter": "DFW", 
        "SourceMachineAgentId": 202743, 
        "SourceMachineName": "web2", 
        "TimeOfActivity": "/Date(1375816984000)/", 
        "Type": "Backup"
    }
]
</programlisting>
            </example>
        </section>
        <section xml:id="createRestoreConfiguration-d1e01">
            <title>Create a restore configuration</title>
            <para>Now that you have a backup, you can restore it to a different location on your
                server. You can also restore it to a different server, or to the same folder on the
                same server. You must set the <code>BackupMachineId</code>,
                    <code>DestinationMachineId</code>, and <code>DestinationPath</code> values
                properly. <code>BackupId</code> identifies the backup that you want to use to
                restore. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-s</code> option for silent or quiet mode (no
                progress or error messages shown) and the <code>-X</code> option to specify the
                request operation to use when communicating with the HTTP server (instead of using
                the default operation).</para>
            <para>If you have the tools, you can run the cURL JSON request examples with the
                following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                    request example> | python -m json.tool</command>.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the request succeeded.</para>
            <example>
                <title>Create a restore configuration</title>
                <programlisting language="bash">
curl -s -X PUT https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/restore /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" \
-d '{ "BackupId": 368785,
      "BackupMachineId": 157512, 
      "DestinationMachineId": 157512, 
      "DestinationPath": "C:\\FolderPathForRestore\\", 
      "OverwriteFiles": false }' | python -m json.tool 
  </programlisting>
                <programlisting language="bash">
{
    "RestoreId": 1394,
    "BackupId": 368785,
    "DestinationMachineId": 157512,
    "OverwriteFiles": false,
    "BackupConfigurationId": 174084,
    "BackupConfigurationName": "Weekly Website Backup v2",
    "BackupRestorePoint": "\Date(1357151359000)\",
    "BackupMachineId": 157512,
    "BackupMachineName": "TestWindows1",
    "BackupFlavor": "RaxCloudServer",
    "DestinationMachineName": "TestWindows2",
    "DestinationPath": "C:\\FolderPathForRestore\\",
    "IsEncrypted": false,
    "EncryptedPassword": null,
    "PublicKey": {
        "ExponentHex": 10001, 
        "ModulusHex": "C6054E90E32D2B25E16F3A560E1B4DC580B1E4AB74E0C66268 0DD8A1BD83956051F6A526B16C55225D1BE6E0B1265F4085FB2F61B61337F5D32198E5CAFFEA CD50E90517A329146E43B20194C082A9C890060AD07A542FBC035B2A96F9F212C6D94887BECB 5E15F3E55397B975B1896CFC66EBB5DD7D83587467A0E7F669ADB925A7BE4C1ECED1BC9E92DB 768CE76FDC86CCDD04BDF469679FE3261AA66C22AC6263E540B79780AAF09CFC798CDC4D1218 867388632EA4BD1BF511E4881E07C5387DDDBE741E615ACA0C32A738F5B952F1C17051EC3BAF 9F64C629515EA2AF93E6BB450A8B1B3E02963471679D5670AF93CFEA649172EDA7AC5E071E2D 3AF0BD"
    },
    "RestoreStateId": 0
}
</programlisting>
            </example>
        </section>
        <section xml:id="restoreBackup-d1e01">
            <title>Start a restore operation manually</title>
            <para>You can manually run a restore operation that is based on a restore configuration.
                Use the <code>RestoreId</code> that was returned in <xref
                    linkend="createRestoreConfiguration-d1e01"/>. The following example is for an
                unencrypted restore operation. For an encrypted restore operation, you add the
                    <code>EncryptedPassword</code> parameter with its value.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token.</para>
            <para>The cURL request uses the <code>-s</code> option for silent or quiet mode (no
                progress or error messages shown) and the <code>-X</code> option to specify the
                request operation to use when communicating with the HTTP server (instead of using
                the default operation).</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">This operation does not
                return a response body. An HTTP status code of 204 (No Content) in the response
                indicates that the request succeeded.</para>
            <example>
                <title>Start a restore manually</title>
                <programlisting language="bash">
curl -s -X POST https: //dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/restore/action-requested \
  -H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
  -H "Content-Type: application/json" \
  -d '{"Action": "StartManual",     
       "Id": 1394  }'
</programlisting>
                <para>When the restore is complete, you receive an email about the status, as shown
                    in the following example. Receiving the email is based on the
                        <code>NotifyRecipients</code>, <code>NotifySuccess</code>, and
                        <code>NotifyFailure</code> parameters that you specify when you create your
                    backup configuration (see <xref linkend="createBackupConfiguration-d1e01"/>). </para>
                <programlisting language="bash">
Rackspace Cloud Backup 
Status: Completed
Started: 01 Aug 2014 14:40 UTC 
Completed: 01 Aug 2014 14:40 UTC 
Destination: C:\\FolderPathForRestore\\
Files Restored: 2 (4 KB) 
Errors Encountered: 0   
</programlisting>
            </example>
        </section>
        <section xml:id="getRestoreReport-d1e01">
            <title>Get a restore report</title>
            <para>You can request a restore report that provides information about the restore
                operation and tells you if the operation ran successfully.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-s</code> option for silent or quiet mode (no
                progress or error messages shown) and the <code>-X</code> option to specify the
                request operation to use when communicating with the HTTP server (instead of using
                the default operation).</para>
            <para>If you have the tools, you can run the cURL JSON request examples with the
                following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                    request example> | python -m json.tool</command>.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the request succeeded.</para>
            <example>
                <title>Get a restore report</title>
                <programlisting language="bash">
curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/restore/report/<emphasis role="bold">yourRestoreID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" | python -m json.tool
</programlisting>
                <programlisting language="bash">
{
  "BackupConfigurationId": 174084,
  "BackupConfigurationName": "Weekly Website Backup v2",
  "BackupReportId": 2437160,
  "CompletedTime": "/Date(1357151359000)/",
  "Diagnostics": "No errors",
  "Duration": "00:00:00",
  "ErrorList": [],
  "NumBytesRestored": "4 MB",
  "NumErrors": "0",
  "NumFilesRestored": "2",
  "OriginatingComputerName": "web02",
  "Reason": "Success",
  "RestoreDestination": "TestWindows2",
  "RestoreDestinationMachineId": 157512,
  "RestorePoint": "/Date(1357151359000)/",
  "StartTime": "/Date(1363790404000)/",
  "State": "Completed"
} 
</programlisting>
            </example>
            <para>Cloud Backup reports success. You can also check the folder listings on your
                server.</para>
        </section>
        <section xml:id="deleteBackupConfiguration-d1e01">
            <title>Delete a backup configuration</title>
            <para>You can delete the backup configuration file and verify that it was
                removed.</para>
            <note>
                <para>Similarly, you can also delete a restore configuration by using the operation
                    to delete a restore configuration. </para>
            </note>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-i</code> option to send the HTTP response to
                terminal output and the <code>-X</code> option to specify the correct HTTP
                method.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">This operation does not
                return a response body. An HTTP status code of 200 (OK) in the response indicates
                that the request succeeded.  </para>
            <example>
                <title>Delete a backup configuration</title>
                <programlisting language="bash">
curl -i -X DELETE https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/backup-configuration/<emphasis role="bold">yourBackupConfigurationID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" 
</programlisting>
            </example>
            <para>To verify that the backup configuration is deleted, list the backup configuration
                details to see <code>IsDeleted: True</code>. </para>
            <example>
                <title>List backup configuration details</title>
                <programlisting language="bash">
curl -s -X GET https://dfw.backup.api.rackspacecloud.com/v1.0/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>/backup-configuration/<emphasis role="bold">yourBackupConfigurationID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" | python -m json.tool
</programlisting>
                <programlisting language="bash">{ 
"BackupConfigurationId": 174084, 
"BackupConfigurationName": "Weekly Website Backup v2",
 ..... 
"IsDeleted": true,
 .... 
} </programlisting>
            </example>
        </section>
    </chapter>
    <chapter xml:id="additionalResources-d1e01">
        <title>Additional resources</title>
        <para>For information about all Cloud Backup API operations, see the <citetitle>Rackspace
                Cloud Backup Developer Guide</citetitle> at <link
                xlink:href="http://docs.rackspace.com/">http://docs.rackspace.com/</link>. All you
            need to get started with the Cloud Backup API is in this getting started guide, the
            developer guide, and your Rackspace Cloud account. </para>
        <para>For additional information about Cloud Backup, see <link
                xlink:href="http://www.rackspace.com/knowledge_center/product-page/cloud-backup">the
                Knowledge Center</link>, and especially, the Knowledge Center article <link
                xlink:href="http://www.rackspace.com/knowledge_center/article/best-practices-for-cloud-backup"
                >Best Practices for Cloud Backup</link>. </para>
        <para>The official support channels (phone, chat, email, forums, and knowledge base
            articles) for Cloud Backup are available through the Rackspace Cloud website at <link
                xlink:href="http://www.rackspace.com/cloud/backup/"
                >http://www.rackspace.com/cloud/backup/</link>. Rackspace welcomes feedback,
            comments, and bug reports at <link xlink:href="mailto:support@rackspacecloud.com"
                >support@rackspacecloud.com</link>.</para>
        <para>If the Cloud Backup system is not functioning to your expectations, you can review the
            system status page at  <link xlink:href="http://status.rackspacecloud.com/cloudbackup/"
                >http://status.rackspacecloud.com/cloudbackup/</link>. This page is updated to
            reflect up-to-date information about the system’s current health and status. </para>
        <para>Visit the <link
            xlink:href="http://feedback.rackspace.com"
                >Product Feedback Forum</link> and tell us what you think about Cloud Backup.</para>
        <para>You can follow Rackspace updates and announcements via Twitter at <link
                xlink:href="http://www.twitter.com/rackspace"
                >http://www.twitter.com/rackspace</link>. </para>
        <para>This API uses standard HTTP 1.1 response codes as documented at <link
                xlink:href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                >www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</link>. </para>
       
    </chapter>
    
    <chapter xml:id="docChangeHistory">
        <title>Document change history</title>
        <para>This version of the guide replaces and obsoletes all earlier versions. The most recent
            changes are described in the following table:</para>
        <?rax revhistory?>
    </chapter>
    
    <glossary xml:id="glossary_1" xmlns:wadl="http://wadl.dev.java.net/2009/02"
        xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
        <title>Glossary</title>
        <glossentry xml:id="agent-d1e01">
            <glossterm>Agent</glossterm>
            <glossdef>
                <para>The application that is installed on the server that knows how to perform
                    backups and restores.</para>
            </glossdef>
        </glossentry>
        <glossentry xml:id="backup-d1e01">
            <glossterm>Backup</glossterm>
            <glossdef>
                <para>A group of folders,  files, or both stored on Cloud Backup for a particular
                    server and configuration.</para>
            </glossdef>
        </glossentry>
        <glossentry xml:id="backupConfiguration-d1e01">
            <glossterm>Backup configuration</glossterm>
            <glossdef>
                <para>The definition of what is going to be backed up and when.</para>
            </glossdef>
        </glossentry>
        <glossentry xml:id="restore-d1e01">
            <glossterm>Restore</glossterm>
            <glossdef>
                <para>The process of bringing your system back to a previously saved state.</para>
            </glossdef>
        </glossentry>
        <glossentry xml:id="restoreConfiguration-d1e01">
            <glossterm>Restore configuration</glossterm>
            <glossdef>
                <para>The definition of what is going to be restored and where.</para>
            </glossdef>
        </glossentry>
    </glossary>
</book>
